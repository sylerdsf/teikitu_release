/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Collision - F - Capsule-Ray.i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.16 / »GUID« 015482FC-A4BD-4E1C-AE49-A30E5728D73A */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Collision ================================================================================================================================================================== */

#define VI(A) FCN_VO(A##10)
#define LR_CAP_0 1
#define LR_CAP_1 0
#include "TgS Collision - F - Capsule-Linear.i_inc"
#undef LR_CAP_1
#undef LR_CAP_0
#undef VI

/* ---- FCN_VO(tgCO_F_CP_DistSq_RY) ---------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_CP_DistSq_RY)( VEC_OBJ_T(TgTUBE,CPC) psCP0, VEC_OBJ_T(TgRAY,CPC) psRY0 )
{
    VAR_T()                             fTest = FCN_VO(tgCO_F_SG_Dist_RY)( &psCP0->m_sAX, psRY0 );
    VAR_T()                             fDist = fTest - psCP0->m_fRadius;

    return (FCN_F(tgPM_FSEL)( fDist, fDist*fDist, -VAR_K(KTgMAX) ));
}


/* ---- FCN_VO(tgCO_F_CP_Dist_RY) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_CP_Dist_RY)( VEC_OBJ_T(TgTUBE,CPC) psCP0, VEC_OBJ_T(TgRAY,CPC) psRY0 )
{
    VAR_T()                             fTest = FCN_VO(tgCO_F_SG_Dist_RY)( &psCP0->m_sAX, psRY0 );
    VAR_T()                             fDist = fTest - psCP0->m_fRadius;

    return (FCN_F(tgPM_FSEL)( fDist, fDist, -VAR_K(KTgMAX) ));
}


/* ---- FCN_VO(tgCO_F_CP_ClosestSq_RY) ------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_CP_ClosestSq_RY)( VEC_T(1,PC) pvCP0, VEC_T(1,PC) pvRY0, VEC_OBJ_T(TgTUBE,CPC) psCP0, VEC_OBJ_T(TgRAY,CPC) psRY0 )
{
    VAR_T()                             fDist = FCN_VO(tgCO_F_CP_Closest_RY)( pvCP0, pvRY0, psCP0, psRY0 );

    return (FCN_F(tgPM_FSEL)( fDist, fDist*fDist, -VAR_K(KTgMAX) ));
}


/* ---- FCN_VO(tgCO_F_CP_Closest_RY) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_CP_Closest_RY)( VEC_T(1,PC) pvCP0, VEC_T(1,PC) pvRY0, VEC_OBJ_T(TgTUBE,CPC) psCP0, VEC_OBJ_T(TgRAY,CPC) psRY0 )
{
    VEC_T(1)                            vCP0;

    VAR_T()                             fRadius = psCP0->m_fRadius;
    VAR_T()                             fTest = FCN_VO(tgCO_F_SG_Closest_RY)( &vCP0, pvRY0, &psCP0->m_sAX, psRY0 );
    VAR_T()                             fDist = FCN_F(tgPM_FSEL)( fTest - fRadius, fTest, -TYPE_K(1) );
    VEC_T(1,C)                          vK0 = FCN_V(tgMH_SUB)( pvRY0, &vCP0 );
    VEC_T(1,C)                          vK1 = FCN_V(tgMH_MUL_SV)( fRadius / fDist, &vK0 );

    *pvCP0 = FCN_V(tgMH_ADD)( &vCP0, &vK1 );

    return (FCN_F(tgPM_FSEL)( fDist, fDist - fRadius, -VAR_K(KTgMAX) ));
}


/* ---- FCN_VO(tgCO_F_CP_ParamSq_RY) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_CP_ParamSq_RY)( VEC_T(1,PC) pvCP0, VAR_T(P) pfRY0, VEC_OBJ_T(TgTUBE,CPC) psCP0, VEC_OBJ_T(TgRAY,CPC) psRY0 )
{
    VAR_T()                             fDist = FCN_VO(tgCO_F_CP_Param_RY)( pvCP0, pfRY0, psCP0, psRY0 );

    return (FCN_F(tgPM_FSEL)( fDist, fDist*fDist, -VAR_K(KTgMAX) ));
}


/* ---- FCN_VO(tgCO_F_CP_Param_RY) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_CP_Param_RY)( VEC_T(1,PC) pvCP0, VAR_T(P) pfRY0, VEC_OBJ_T(TgTUBE,CPC) psCP0, VEC_OBJ_T(TgRAY,CPC) psRY0 )
{
    VAR_T()                             fCP0;

    VAR_T()                             fRadius = psCP0->m_fRadius;
    VEC_OBJ_T(TgSEGMENT,CPC)                    psCP0_SG = &psCP0->m_sAX;

    VAR_T()                             fTest = FCN_VO(tgCO_F_SG_Param_RY)( &fCP0, pfRY0, psCP0_SG, psRY0 );
    VAR_T()                             fDist = FCN_F(tgPM_FSEL)( fTest - fRadius, fTest, -TYPE_K(1) );

    VEC_T(1,C)                          vK3 = FCN_V(tgMH_MUL_SV)( *pfRY0, &psRY0->m_vDirN );
    VEC_T(1,C)                          vK4 = FCN_V(tgMH_ADD)( &psRY0->m_vOrigin, &vK3 );
    VEC_T(1,C)                          vK0 = FCN_V(tgMH_MUL_SV)( fCP0, &psCP0->m_sAX.m_vDirN );
    VEC_T(1,C)                          vK1 = FCN_V(tgMH_ADD)( &psCP0->m_sAX.m_vOrigin, &vK0 );
    VEC_T(1,C)                          vK5 = FCN_V(tgMH_SUB)( &vK4, &vK1 );
    VEC_T(1,C)                          vK2 = FCN_V(tgMH_MUL_SV)( fRadius / fDist, &vK5 );

    *pvCP0 = FCN_V(tgMH_ADD)( &vK1, &vK2 );

    return (FCN_F(tgPM_FSEL)( fDist, fDist - fRadius, -VAR_K(KTgMAX) ));
}


/* ---- FCN_VO(tgCO_F_CP_Test_RY) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgCO_F_CP_Test_RY)( VEC_OBJ_T(TgTUBE,CPC) psCP0, VEC_OBJ_T(TgRAY,CPC) psRY0 )
{
    return (FCN_VO(tgCO_F_SG_Dist_RY)( &psCP0->m_sAX, psRY0 ) <= psCP0->m_fRadius);
}


/* ---- FCN_VO(tgCO_F_CP_Intersect_RY) ------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgRESULT FCN_VO(tgCO_F_CP_Intersect_RY)( VEC_OBJ_T(STg2_CO_Packet,PC) psPacket, VEC_OBJ_T(TgTUBE,CPC) psCP0, VEC_OBJ_T(TgRAY,CPC) psRY0 )
{
    return (FCN_VO(tgCO_FI_CP_Intersect_LR10)( psPacket, psCP0, &psRY0->m_vOrigin, &psRY0->m_vDirN ));
}


/* ---- FCN_VO(tgCO_F_RY_Penetrate_CP) ------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgRESULT FCN_VO(tgCO_F_RY_Penetrate_CP)( VEC_OBJ_T(STg2_CO_Packet,PC) psPacket, VEC_OBJ_T(TgRAY,CPC) psRY0, VEC_OBJ_T(TgTUBE,CPC) psCP0 )
{
    TgPARAM_CHECK( FCN_VO(tgGM_TB_Is_Valid)( psCP0 ) && FCN_VO(tgGM_RY_Is_Valid)( psRY0 ) );

    if (0 == psPacket->m_niMaxContact || psPacket->m_niContact >= psPacket->m_niMaxContact || nullptr == psPacket->m_psContact)
    {
        return (KTgE_FAIL);
    }
    else
    {
        VEC_T(1)                            vCP0, vRY0;
        VEC_OBJ_T(TgSEGMENT,CPC)                    psCP0_SG = &psCP0->m_sAX;
        VAR_T()                             fDistSq = FCN_VO(tgCO_F_SG_ClosestSq_RY)( &vCP0, &vRY0, psCP0_SG, psRY0 );

        if (fDistSq > psCP0->m_fRadiusSq)
        {
            return (KTgE_NO_INTERSECT);
        };

        return (FCN_VO(tgCO_FI_CP_Penetrate_LR10)( psPacket, &vRY0, psCP0, &vCP0, fDistSq ));
    };
}


/* ---- FCN_VO(tgCO_F_CP_Clip_Param_RY) ------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgRESULT FCN_VO(tgCO_F_CP_Clip_Param_RY)( VAR_T(P) pfRY0, VAR_T(P) pfRY1, VEC_OBJ_T(TgTUBE,CPC) psCP0, VEC_OBJ_T(TgRAY,CPC) psRY0 )
{
    return (FCN_VO(tgCO_FI_CP_Clip_Param_LR10)( pfRY0, pfRY1, psCP0, &psRY0->m_vOrigin, &psRY0->m_vDirN ));
}


/* ---- FCN_VO(tgCO_F_CP_Clip_RY) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgRESULT FCN_VO(tgCO_F_CP_Clip_RY)( VEC_OBJ_T(STg2_CO_Clip_List,PC) psCL, VEC_OBJ_T(TgTUBE,CPC) psCP0, VEC_OBJ_T(TgRAY,CPC) psRY0 )
{
    return (FCN_VO(tgCO_FI_CP_Clip_LR10)( psCL, psCP0, &psRY0->m_vOrigin, &psRY0->m_vDirN ));
}
