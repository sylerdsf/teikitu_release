/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Collision - F - Rectangle-Line.i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.16 / »GUID« 015482FC-A4BD-4E1C-AE49-A30E5728D73A */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Collision ================================================================================================================================================================== */

#define VI(A) FCN_VO(A##00)
#define LR_CAP_0 0
#define LR_CAP_1 0
#include "TgS Collision - F - Rectangle-Linear.i_inc"
#undef LR_CAP_1
#undef LR_CAP_0
#undef VI

/* ---- FCN_VO(tgCO_F_RT_DistSq_LN) ---------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_RT_DistSq_LN)( VEC_OBJ_T(TgRECTANGLE,CPC) psRT0, VEC_OBJ_T(TgLINE,CPC) psLN0 )
{
    VAR_T()                             fT0, fT1, fT2;

    return (FCN_VO(tgCO_F_RT_ParamSq_LN)( &fT0, &fT1, &fT2, psRT0, psLN0 ));
}


/* ---- FCN_VO(tgCO_F_RT_Dist_LN) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_RT_Dist_LN)( VEC_OBJ_T(TgRECTANGLE,CPC) psRT0, VEC_OBJ_T(TgLINE,CPC) psLN0 )
{
    VAR_T()                             fDistSq = FCN_VO(tgCO_F_RT_DistSq_LN)( psRT0, psLN0 );

    return (FCN_F(tgPM_FSEL)( fDistSq, FCN_F(tgPM_SQRT)( fDistSq ), -VAR_K(KTgMAX) ));
}


/* ---- FCN_VO(tgCO_F_RT_ClosestSq_LN) ------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_RT_ClosestSq_LN)( VEC_T(1,PC) pvRT0, VEC_T(1,PC) pvLN0, VEC_OBJ_T(TgRECTANGLE,CPC) psRT0, VEC_OBJ_T(TgLINE,CPC) psLN0 )
{
    VAR_T()                             fT0, fT1, fT2;

    VAR_T()                             fDistSq = FCN_VO(tgCO_F_RT_ParamSq_LN)( &fT0, &fT1, &fT2, psRT0, psLN0 );
    VEC_T(1,C)                          vK0 = FCN_V(tgMH_MUL_SV)( fT0, psRT0->m_avEdge + 0 );
    VEC_T(1,C)                          vK1 = FCN_V(tgMH_MUL_SV)( fT1, psRT0->m_avEdge + 1 );
    VEC_T(1,C)                          vK2 = FCN_V(tgMH_ADD)( &psRT0->m_vOrigin, &vK0 );
    VEC_T(1,C)                          vK3 = FCN_V(tgMH_MUL_SV)( fT2, &psLN0->m_vDirN );

    *pvRT0 = FCN_V(tgMH_ADD)( &vK2, &vK1 );
    *pvLN0 = FCN_V(tgMH_ADD)( &psLN0->m_vOrigin, &vK3 );

    return (FCN_F(tgPM_FSEL)( fDistSq, fDistSq, -VAR_K(KTgMAX) ));
}


/* ---- FCN_VO(tgCO_F_RT_Closest_LN) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_RT_Closest_LN)( VEC_T(1,PC) pvRT0, VEC_T(1,PC) pvLN0, VEC_OBJ_T(TgRECTANGLE,CPC) psRT0, VEC_OBJ_T(TgLINE,CPC) psLN0 )
{
    VAR_T()                             fDistSq = FCN_VO(tgCO_F_RT_ClosestSq_LN)( pvRT0, pvLN0, psRT0, psLN0 );

    return (FCN_F(tgPM_FSEL)( fDistSq, FCN_F(tgPM_SQRT)( fDistSq ), -VAR_K(KTgMAX) ));
}


/* ---- FCN_VO(tgCO_F_RT_ParamSq_LN) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_RT_ParamSq_LN)( VAR_T(P) pfRT0, VAR_T(P) pfRT1, VAR_T(P) pfLN0, VEC_OBJ_T(TgRECTANGLE,CPC) psRT0, VEC_OBJ_T(TgLINE,CPC) psLN0 )
{
    return (FCN_VO(tgCO_FI_RT_ParamSq_LR00)( pfRT0, pfRT1, pfLN0, psRT0, &psLN0->m_vOrigin, &psLN0->m_vDirN ));
}


/* ---- FCN_VO(tgCO_F_RT_Param_LN) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_RT_Param_LN)( VAR_T(P) pfRT0, VAR_T(P) pfRT1, VAR_T(P) pfLN0, VEC_OBJ_T(TgRECTANGLE,CPC) psRT0, VEC_OBJ_T(TgLINE,CPC) psLN0 )
{
    VAR_T()                             fDistSq = FCN_VO(tgCO_F_RT_ParamSq_LN)( pfRT0, pfRT1, pfLN0, psRT0, psLN0 );

    return (FCN_F(tgPM_FSEL)( fDistSq, FCN_F(tgPM_SQRT)( fDistSq ), -VAR_K(KTgMAX) ));
}


/* ---- FCN_VO(tgCO_F_RT_Test_LN) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgCO_F_RT_Test_LN)( VEC_OBJ_T(TgRECTANGLE,CPC) psRT0, VEC_OBJ_T(TgLINE,CPC) psLN0 )
{
    return (FCN_VO(tgCO_F_RT_DistSq_LN)( psRT0, psLN0 ) > TYPE_K(0));
}


/* ---- FCN_VO(tgCO_F_RT_Clip_LN) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgRESULT FCN_VO(tgCO_F_RT_Clip_LN)( VEC_OBJ_T(STg2_CO_Clip_List,PC) psCL, VEC_OBJ_T(TgRECTANGLE,CPC) psRT0, VEC_OBJ_T(TgLINE,CPC) psLN0 )
{
    return (FCN_VO(tgCO_FI_RT_Clip_LR00)( psCL, psRT0, &psLN0->m_vOrigin, &psLN0->m_vDirN ));
}


/* ---- FCN_VO(tgCO_F_RT_Clip_Param_LN) ------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgRESULT FCN_VO(tgCO_F_RT_Clip_Param_LN)( VAR_T(P) pfLN0, VAR_T(P) pfLN1, VEC_OBJ_T(TgRECTANGLE,CPC) psRT0, VEC_OBJ_T(TgLINE,CPC) psLN0 )
{
    return (FCN_VO(tgCO_FI_RT_Clip_Param_LR00)( pfLN0, pfLN1, psRT0, &psLN0->m_vOrigin, &psLN0->m_vDirN ));
}
