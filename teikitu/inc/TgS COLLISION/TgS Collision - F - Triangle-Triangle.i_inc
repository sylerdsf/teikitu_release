/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Collision - F - Triangle-Triangle.i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.16 / »GUID« 015482FC-A4BD-4E1C-AE49-A30E5728D73A */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Collision ================================================================================================================================================================== */

/* ---- FCN_VO(tgCO_F_ST_DistSq_ST) ---------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_ST_DistSq_ST)( VEC_OBJ_T(TgSTRI,CPC) psST0, VEC_OBJ_T(TgSTRI,CPC) psST1 )
{
    VAR_T()                             fET00, fET01, fET10, fET11;

    return (FCN_VO(tgCO_F_ST_ParamSq_ST)( &fET00, &fET01, &fET10, &fET11, psST0, psST1 ));
}


/* ---- FCN_VO(tgCO_F_ST_Dist_ST) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_ST_Dist_ST)( VEC_OBJ_T(TgSTRI,CPC) psST0, VEC_OBJ_T(TgSTRI,CPC) psST1 )
{
    VAR_T()                             fET00, fET01, fET10, fET11, fDistSq;

    fDistSq = FCN_VO(tgCO_F_ST_ParamSq_ST)( &fET00, &fET01, &fET10, &fET11, psST0, psST1 );

    return (FCN_F(tgPM_FSEL)( fDistSq, FCN_F(tgPM_SQRT)( fDistSq ), -VAR_K(KTgMAX) ));
}


/* ---- FCN_VO(tgCO_F_ST_ClosestSq_ST) ------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_ST_ClosestSq_ST)( VEC_T(1,PC) pvET0, VEC_T(1,PC) pvET1, VEC_OBJ_T(TgSTRI,CPC) psST0, VEC_OBJ_T(TgSTRI,CPC) psST1 )
{
    VAR_T()                             fET00, fET01, fET10, fET11;

    VAR_T()                             fDistSq = FCN_VO(tgCO_F_ST_ParamSq_ST)( &fET00, &fET01, &fET10, &fET11, psST0, psST1 );

    VEC_T(1,C)                          vK0 = FCN_V(tgMH_MUL_SV)( fET00, psST0->m_sCT.m_sET.m_avEdge + 0 );
    VEC_T(1,C)                          vK1 = FCN_V(tgMH_MUL_SV)( fET01, psST0->m_sCT.m_sET.m_avEdge + 2 );
    VEC_T(1,C)                          vK2 = FCN_V(tgMH_MUL_SV)( fET10, psST1->m_sCT.m_sET.m_avEdge + 0 );
    VEC_T(1,C)                          vK3 = FCN_V(tgMH_MUL_SV)( fET11, psST1->m_sCT.m_sET.m_avEdge + 2 );
    VEC_T(1,C)                          vK4 = FCN_V(tgMH_ADD)( psST0->m_sCT.m_sET.m_sPT.m_avPoint, &vK0 );
    VEC_T(1,C)                          vK5 = FCN_V(tgMH_ADD)( psST1->m_sCT.m_sET.m_sPT.m_avPoint, &vK2 );

    *pvET0 = FCN_V(tgMH_SUB)( &vK4, &vK1 );
    *pvET1 = FCN_V(tgMH_SUB)( &vK5, &vK3 );

    return (FCN_F(tgPM_FSEL)( fDistSq, fDistSq, -VAR_K(KTgMAX) ));
}


/* ---- FCN_VO(tgCO_F_ST_Closest_ST) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_ST_Closest_ST)( VEC_T(1,PC) pvET0, VEC_T(1,PC) pvET1, VEC_OBJ_T(TgSTRI,CPC) psST0, VEC_OBJ_T(TgSTRI,CPC) psST1 )
{
    VAR_T()                             fET00, fET01, fET10, fET11;

    VAR_T()                             fDistSq = FCN_VO(tgCO_F_ST_ParamSq_ST)( &fET00, &fET01, &fET10, &fET11, psST0, psST1 );

    VEC_T(1,C)                          vK0 = FCN_V(tgMH_MUL_SV)( fET00, psST0->m_sCT.m_sET.m_avEdge + 0 );
    VEC_T(1,C)                          vK1 = FCN_V(tgMH_MUL_SV)( fET01, psST0->m_sCT.m_sET.m_avEdge + 2 );
    VEC_T(1,C)                          vK2 = FCN_V(tgMH_MUL_SV)( fET10, psST1->m_sCT.m_sET.m_avEdge + 0 );
    VEC_T(1,C)                          vK3 = FCN_V(tgMH_MUL_SV)( fET11, psST1->m_sCT.m_sET.m_avEdge + 2 );
    VEC_T(1,C)                          vK4 = FCN_V(tgMH_ADD)( psST0->m_sCT.m_sET.m_sPT.m_avPoint, &vK0 );
    VEC_T(1,C)                          vK5 = FCN_V(tgMH_ADD)( psST1->m_sCT.m_sET.m_sPT.m_avPoint, &vK2 );

    *pvET0 = FCN_V(tgMH_SUB)( &vK4, &vK1 );
    *pvET1 = FCN_V(tgMH_SUB)( &vK5, &vK3 );

    return (FCN_F(tgPM_FSEL)( fDistSq, FCN_F(tgPM_SQRT)( fDistSq ), -VAR_K(KTgMAX) ));
}


/* ---- FCN_VO(tgCO_F_ST_Param_ST) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgCO_F_ST_Param_ST)( VAR_T(P) pfET00, VAR_T(P) pfET01, VAR_T(P) pfET10, VAR_T(P) pfET11, VEC_OBJ_T(TgSTRI,CPC) psST0, VEC_OBJ_T(TgSTRI,CPC) psST1 )
{
    VAR_T()                             fDistSq = FCN_VO(tgCO_F_ST_ParamSq_ST)( pfET00, pfET01, pfET10, pfET11, psST0, psST1 );

    return (FCN_F(tgPM_FSEL)( fDistSq, FCN_F(tgPM_SQRT)( fDistSq ), -VAR_K(KTgMAX) ));
}


/* ---- FCN_VO(tgCO_F_ST_Clip_PT) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgRESULT FCN_VO(tgCO_F_ST_Clip_PT)( VEC_OBJ_T(STg2_CO_Clip_List,PC) psCL, VEC_OBJ_T(TgSTRI,CPC) psST0, VEC_OBJ_T(TgPTRI,CPC) psPT0 )
{
    if (psCL->m_niMax < 6)
    {
        TgERROR(false);
        return (KTgE_FAIL);
    };

    psCL->m_avPoint[0] = *(FCN_VO(tgGM_PT_Query_Point_0)( psPT0 ));
    psCL->m_avPoint[1] = *(FCN_VO(tgGM_PT_Query_Point_1)( psPT0 ));
    psCL->m_avPoint[2] = *(FCN_VO(tgGM_PT_Query_Point_2)( psPT0 ));

    psCL->m_niPoint = 3;

    return (FCN_VO(tgCO_F_ST_Clip)( psCL, psST0 ));
}
