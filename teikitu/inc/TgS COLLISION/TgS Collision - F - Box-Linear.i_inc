/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Collision - F - Box-Linear.i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.16 / »GUID« 015482FC-A4BD-4E1C-AE49-A30E5728D73A */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */

MSVC_WARN_DISABLE_PUSH( 6285 ) /* Analysis - (<non-zero constant> || <non-zero constant>) is always a non-zero constant. */


/* == Collision ================================================================================================================================================================== */

/* ---- VI(tgCO_F_BX_Clip_LR) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgRESULT VI(tgCO_F_BX_Clip_LR)( VEC_OBJ_T(STg2_CO_Clip_List,PC) psCL, VEC_OBJ_T(TgBOX,CPC) psBX0, VEC_T(1,CPC) pvS0, VEC_T(1,CPC) pvD0 )
{
    TgRESULT                            iResult = KTgE_FAIL;
    VAR_T()                             fT0, fT1;

    if ((psCL->m_niMax < 2) || (TgFAILED( iResult = VI(tgCO_FI_BX_Clip_Param_LR)( &fT0, &fT1, psBX0, pvS0, pvD0 ) )))
    {
        psCL->m_niPoint = 0;
        return (iResult);
    }
    else if ((LR_CAP_0 && fT0 < TYPE_K(0) && fT1 <= TYPE_K(0)) || (LR_CAP_1 && fT0 >= TYPE_K(1) && fT1 > TYPE_K(1)))
    {
        psCL->m_niPoint = 0;
        return (KTgE_NO_INTERSECT);
    }
    else
    {
        VEC_T(1,C)                          vK0 = FCN_V(tgMH_MUL_SV)( fT0, pvD0 );
        VEC_T(1,C)                          vK1 = FCN_V(tgMH_MUL_SV)( fT1, pvD0 );

        psCL->m_avPoint[0] = FCN_V(tgMH_ADD)( pvS0, &vK0 );
        psCL->m_avPoint[1] = FCN_V(tgMH_ADD)( pvS0, &vK1 );
        psCL->m_niPoint = 2;

        return (KTgS_OK);
    };
}


/* ---- VI(tgCO_FI_BXF_Clip_Param_LR) -------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgRESULT VI(tgCO_FI_BXF_Clip_Param_LR)( VAR_T(P) pfLN0, VAR_T(P) pfLN1, VEC_OBJ_T(TgBOX,CPC) psBX0, TgSINT_F32_C i0, VEC_T(1,CPC) pvS0, VEC_T(1,CPC) pvD0 )
{
    VEC_OBJ_T(TgRECTANGLE)              sFace;

    return (VI(tgCO_FI_RT_Clip_Param_LR)( pfLN0, pfLN1, FCN_VO(tgCO_F_BXF_Init_Face)( &sFace, psBX0, i0 ), pvS0, pvD0 ));
}


MSVC_WARN_DISABLE_POP( 6285 )
