/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Collision.h_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.16 / »GUID« 015482FC-A4BD-4E1C-AE49-A30E5728D73A */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */

#if defined(TGS_COLLISION_HINC)
    #error This file should be include by TGS_COLLISION_H
#endif

#if defined(TEMPLATE__ENABLE_INTEGER)

    #error Geometry is assumed to be floating point

#else

    #if !defined (ENABLE_RELOAD_GUARD)
        #define ENABLE_RELOAD_GUARD
        #if !defined(TEMPLATE__TYPE_SIZE)
            #define TEMPLATE__TYPE_SIZE 32
            #include __FILE__
            #undef TEMPLATE__TYPE_SIZE
            #define TEMPLATE__TYPE_SIZE 64
        #endif
        #undef ENABLE_RELOAD_GUARD
    #endif

#endif

#include "TgS COMMON/TgS Common - Base - Defines [Template] [Math].h_inc"


/* == Collision ================================================================================================================================================================== */

/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */
/*  Collision - Request Functions                                                                                                                                                  */
/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */

                                            /* Setup - Query Type and Primitive */
TgINLINE TgVOID                             FCN_VO(tgCO_REQ_Init_Test)( VEC_OBJ_T(STg2_CO_Request,PC), ETgPRIMITIVE_C, ETgCO_PURPOSE_C );
TgINLINE TgVOID                             FCN_VO(tgCO_REQ_Init_Test_Sweep)( VEC_OBJ_T(STg2_CO_Request,PC), ETgPRIMITIVE_C, VEC_T(1,CPC), ETgCO_PURPOSE_C );
TgINLINE TgVOID                             FCN_VO(tgCO_REQ_Init_Intersect)( VEC_OBJ_T(STg2_CO_Request,PC), ETgPRIMITIVE_C, ETgCO_PURPOSE_C );
TgINLINE TgVOID                             FCN_VO(tgCO_REQ_Init_Penetrate)( VEC_OBJ_T(STg2_CO_Request,PC), ETgPRIMITIVE_C, ETgCO_PURPOSE_C );
TgINLINE TgVOID                             FCN_VO(tgCO_REQ_Init_Sweep)( VEC_OBJ_T(STg2_CO_Request,PC), ETgPRIMITIVE_C, VEC_T(1,CPC), ETgCO_PURPOSE_C );
TgINLINE TgVOID                             FCN_VO(tgCO_REQ_Init_Sweep_Penetrate)( VEC_OBJ_T(STg2_CO_Request,PC), ETgPRIMITIVE_C, VEC_T(1,CPC), ETgCO_PURPOSE_C );
TgINLINE TgVOID                             FCN_VO(tgCO_REQ_Init_Collect)( VEC_OBJ_T(STg2_CO_Request,PC), ETgPRIMITIVE_C, ETgCO_PURPOSE_C );

                                            /* Setup - Filters (Include and Exclude Filters) */
TgINLINE TgVOID                             FCN_VO(tgCO_REQ_Set_Include_Filter)( VEC_OBJ_T(STg2_CO_Request,PC), TgUINT_F32_C );

TgEXTN TgVOID                               FCN_VO(tgCO_REQ_Ignore_Reset)( VEC_OBJ_T(STg2_CO_Request,PC) );

TgINLINE TgVOID                             FCN_VO(tgCO_REQ_Ignore_All)( VEC_OBJ_T(STg2_CO_Request,PC), TgBOOL_C );
TgEXTN TgRESULT                             FCN_VO(tgCO_REQ_Ignore_Connection)( VEC_OBJ_T(STg2_CO_Request,PC), STg2_Connection_PC, TgBOOL_C );
TgEXTN TgRESULT                             FCN_VO(tgCO_REQ_Ignore_Connection_Graph)( VEC_OBJ_T(STg2_CO_Request,PC), STg2_Connection_PC, TgBOOL_C );
TgEXTN TgRESULT                             FCN_VO(tgCO_REQ_Ignore_Native_String)( VEC_OBJ_T(STg2_CO_Request,PC), TgSINT_F32_C, TgBOOL_C );

TgINLINE TgBOOL                             FCN_VO(tgCO_REQ_Is_Ignored_All)( VEC_OBJ_T(STg2_CO_Request,CPC) );
TgEXTN TgBOOL                               FCN_VO(tgCO_REQ_Is_Ignored_Connection)( VEC_OBJ_T(STg2_CO_Request,CPC), STg2_Connection_CPC );
TgEXTN TgBOOL                               FCN_VO(tgCO_REQ_Is_Ignored_Native_String)( VEC_OBJ_T(STg2_CO_Request,CPC), TgSINT_F32_C );

                                            /* Miscellaneous */
TgEXTN TgVOID                               FCN_VO(tgCO_REQ_Reset)( VEC_OBJ_T(STg2_CO_Request,PC) );

                                            /* Transform */
TgEXTN TgVOID                               FCN_VO(tgCO_REQ_F_TX)( VEC_OBJ_T(STg2_CO_Request,PC), VEC_04_3_T(CPCU) );
TgEXTN TgVOID                               FCN_VO(tgCO_REQ_F_Copy_TX)( VEC_OBJ_T(STg2_CO_Request,PC), VEC_OBJ_T(STg2_CO_Request,CPC), VEC_04_3_T(CPCU) );


/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */
/*  Collision - Pair Functions                                                                                                                                                     */
/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */

#include "TgS COLLISION/TgS Collision - F - Box AA.h_inc"
#include "TgS COLLISION/TgS Collision - F - Box.h_inc"
#include "TgS COLLISION/TgS Collision - F - Capsule.h_inc"
#include "TgS COLLISION/TgS Collision - F - Circle.h_inc"
#include "TgS COLLISION/TgS Collision - F - Cylinder.h_inc"
#include "TgS COLLISION/TgS Collision - F - Disk.h_inc"
#include "TgS COLLISION/TgS Collision - F - Ellipse.h_inc"
#include "TgS COLLISION/TgS Collision - F - Line.h_inc"
#include "TgS COLLISION/TgS Collision - F - Mesh.h_inc"
#include "TgS COLLISION/TgS Collision - F - Parallelogram.h_inc"
#include "TgS COLLISION/TgS Collision - F - Plane.h_inc"
#include "TgS COLLISION/TgS Collision - F - Ray.h_inc"
#include "TgS COLLISION/TgS Collision - F - Rectangle.h_inc"
#include "TgS COLLISION/TgS Collision - F - Segment.h_inc"
#include "TgS COLLISION/TgS Collision - F - Sphere.h_inc"
#include "TgS COLLISION/TgS Collision - F - Torus.h_inc"
#include "TgS COLLISION/TgS Collision - F - Triangle.h_inc"
#include "TgS COLLISION/TgS Collision - F - Tube.h_inc"


#if defined(VEC_IS_NATIVE) && VEC_IS_NATIVE


/*# defined(VEC_IS_NATIVE) && VEC_IS_NATIVE */
#endif


/* =============================================================================================================================================================================== */

#include "TgS COMMON/TgS Common - Base - Defines [Template] [Math].h_inc"
