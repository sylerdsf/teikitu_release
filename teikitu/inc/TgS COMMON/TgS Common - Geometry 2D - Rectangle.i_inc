/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common - Geometry 2D - Rectangle.i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.16 / »GUID« 015482FC-A4BD-4E1C-AE49-A30E5728D73A */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Common ===================================================================================================================================================================== */

/* ---- FCN_VO(tgGM_Is_Valid_RT2D) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgGM_Is_Valid_RT2D)( VEC_OBJ_T(TgRECT2D,CPCU) psRT0 )
{
    return (!FCN_F(tgPM_NAN)(psRT0->m_fX0) && !FCN_F(tgPM_NAN)( psRT0->m_fY0 ) && !FCN_F(tgPM_NAN)( psRT0->m_fX1)  && !FCN_F(tgPM_NAN)( psRT0->m_fY1 ));
}


/* ---- FCN_VO(tgGM_TX_RT2D) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_TX_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VAR_T(C) fX, VAR_T(C) fY )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)(fX) && !FCN_F(tgPM_NAN)(fY));

    psRT0->m_fX0 += fX;
    psRT0->m_fX1 += fX;
    psRT0->m_fY0 += fY;
    psRT0->m_fY1 += fY;
}


/* ---- FCN_VO(tgGM_Copy_TX_RT2D) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_Copy_TX_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VEC_OBJ_T(TgRECT2D,CPCU) psRT1, VAR_T(C) fX, VAR_T(C) fY )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_Is_Valid_RT2D)(psRT1) && !FCN_F(tgPM_NAN)(fX) && !FCN_F(tgPM_NAN)(fY));

    psRT0->m_fX0 = psRT1->m_fX0 + fX;
    psRT0->m_fX1 = psRT1->m_fX1 + fX;
    psRT0->m_fY0 = psRT1->m_fY0 + fY;
    psRT0->m_fY1 = psRT1->m_fY1 + fY;
}


/* ---- FCN_VO(tgGM_Init_RT2D) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_Init_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VAR_T(C) fX0, VAR_T(C) fY0, VAR_T(C) fX1, VAR_T(C) fY1 )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)(fX0) && !FCN_F(tgPM_NAN)(fY0) && !FCN_F(tgPM_NAN)(fX1) && !FCN_F(tgPM_NAN)(fY1));

    psRT0->m_fX0 = fX0;
    psRT0->m_fY0 = fY0;
    psRT0->m_fX1 = fX1;
    psRT0->m_fY1 = fY1;
}


/* ---- FCN_VO(tgGM_Init_X0_RT2D) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_Init_X0_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VAR_T(C) fX0 )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)(fX0));
    psRT0->m_fX0 = fX0;
}


/* ---- FCN_VO(tgGM_Init_X1_RT2D) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_Init_X1_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VAR_T(C) fX1 )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)(fX1));
    psRT0->m_fX1 = fX1;
}


/* ---- FCN_VO(tgGM_Init_Y0_RT2D) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_Init_Y0_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VAR_T(C) fY0 )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)(fY0));
    psRT0->m_fY0 = fY0;
}


/* ---- FCN_VO(tgGM_Init_Y1_RT2D) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_Init_Y1_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VAR_T(C) fY1 )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)(fY1));
    psRT0->m_fY1 = fY1;
}


/* ---- FCN_VO(tgGM_Copy_RT2D) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_Copy_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VEC_OBJ_T(TgRECT2D,CPCU) psRT1 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_Is_Valid_RT2D)(psRT1));

    psRT0->m_fX0 = psRT1->m_fX0;
    psRT0->m_fX1 = psRT1->m_fX1;
    psRT0->m_fY0 = psRT1->m_fY0;
    psRT0->m_fY1 = psRT1->m_fY1;
}


/* ---- FCN_VO(tgGM_Query_X0_RT2D) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_Query_X0_RT2D)( VEC_OBJ_T(TgRECT2D,CPCU) psRT0 )
{
    return (psRT0->m_fX0);
}


/* ---- FCN_VO(tgGM_Query_X1_RT2D) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_Query_X1_RT2D)( VEC_OBJ_T(TgRECT2D,CPCU) psRT0 )
{
    return (psRT0->m_fX1);
}


/* ---- FCN_VO(tgGM_Query_Y0_RT2D) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_Query_Y0_RT2D)( VEC_OBJ_T(TgRECT2D,CPCU) psRT0 )
{
    return (psRT0->m_fY0);
}


/* ---- FCN_VO(tgGM_Query_Y1_RT2D) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_Query_Y1_RT2D)( VEC_OBJ_T(TgRECT2D,CPCU) psRT0 )
{
    return (psRT0->m_fY1);
}


/* ---- FCN_VO(tgGM_Query_Width_RT2D) -------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_Query_Width_RT2D)( VEC_OBJ_T(TgRECT2D,CPCU) psRT0 )
{
    return (FCN_F(tgPM_ABS)( psRT0->m_fX1 - psRT0->m_fX0) );
}


/* ---- FCN_VO(tgGM_Query_Height_RT2D) ------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T()  FCN_VO(tgGM_Query_Height_RT2D)( VEC_OBJ_T(TgRECT2D,CPCU) psRT0 )
{
    return (FCN_F(tgPM_ABS)( psRT0->m_fY1 - psRT0->m_fY0) );
}
