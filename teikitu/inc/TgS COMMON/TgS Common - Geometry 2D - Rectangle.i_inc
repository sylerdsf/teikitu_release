/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common - Geometry 2D - Rectangle.i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.17 / »GUID« 3ED3C595-046B-47FB-8785-5C167178CD24 */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Common ===================================================================================================================================================================== */

/* ---- FCN_VO(tgGM_Is_Valid_RT2D) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgGM_Is_Valid_RT2D)( VEC_OBJ_T(TgRECT2D,CPCU) psRT0 )
{
    return (FCN_V(tgMH_Is_Valid)( VEC_UN_1_MEMBER(psRT0->m_uRect) ));
}


/* ---- FCN_VO(tgGM_TX_RT2D) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_TX_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VAR_T(C) fX, VAR_T(C) fY )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)( fX ) && !FCN_F(tgPM_NAN)( fY ));

    VEC_UN_1_MEMBER(psRT0->m_uRect) = FCN_V(tgMH_ADD)( VEC_UN_1_MEMBER(psRT0->m_uRect), FCN_V(tgMH_Init_ELEM)( fX, fY, fX, fY ) );
}


/* ---- FCN_VO(tgGM_Copy_TX_RT2D) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_Copy_TX_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VEC_OBJ_T(TgRECT2D,CPCU) psRT1, VAR_T(C) fX, VAR_T(C) fY )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_Is_Valid_RT2D)( psRT1 ) && !FCN_F(tgPM_NAN)( fX ) && !FCN_F(tgPM_NAN)( fY ));

    VEC_UN_1_MEMBER(psRT0->m_uRect) = FCN_V(tgMH_ADD)( VEC_UN_1_MEMBER(psRT1->m_uRect), FCN_V(tgMH_Init_ELEM)( fX, fY, fX, fY ) );
}


/* ---- FCN_VO(tgGM_Init_RT2D) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_Init_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VAR_T(C) fX0, VAR_T(C) fY0, VAR_T(C) fX1, VAR_T(C) fY1 )
{
    VEC_UN_1_MEMBER(psRT0->m_uRect) = FCN_V(tgMH_Init_ELEM)( fX0, fY0, fX1, fY1 );
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid)( VEC_UN_1_MEMBER(psRT0->m_uRect) ));
}


/* ---- FCN_VO(tgGM_Init_X0_RT2D) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_Init_X0_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VAR_T(C) fX0 )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)( fX0 ));
    VEC_S_UN_1_MEMBER(psRT0->m_uRect).x = fX0;
}


/* ---- FCN_VO(tgGM_Init_X1_RT2D) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_Init_X1_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VAR_T(C) fX1 )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)( fX1 ));
    VEC_S_UN_1_MEMBER(psRT0->m_uRect).z = fX1;
}


/* ---- FCN_VO(tgGM_Init_Y0_RT2D) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_Init_Y0_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VAR_T(C) fY0 )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)( fY0 ));
    VEC_S_UN_1_MEMBER(psRT0->m_uRect).y = fY0;
}


/* ---- FCN_VO(tgGM_Init_Y1_RT2D) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_Init_Y1_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VAR_T(C) fY1 )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)( fY1 ));
    VEC_S_UN_1_MEMBER(psRT0->m_uRect).w = fY1;
}


/* ---- FCN_VO(tgGM_Copy_RT2D) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_Copy_RT2D)( VEC_OBJ_T(TgRECT2D,PCU) psRT0, VEC_OBJ_T(TgRECT2D,CPCU) psRT1 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_Is_Valid_RT2D)( psRT1 ));
    VEC_UN_1_MEMBER(psRT0->m_uRect) = VEC_UN_1_MEMBER(psRT0->m_uRect);
}


/* ---- FCN_VO(tgGM_Query_X0_RT2D) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_Query_X0_RT2D)( VEC_OBJ_T(TgRECT2D,CPCU) psRT0 )
{
    return (VEC_S_UN_1_MEMBER(psRT0->m_uRect).x);
}


/* ---- FCN_VO(tgGM_Query_X1_RT2D) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_Query_X1_RT2D)( VEC_OBJ_T(TgRECT2D,CPCU) psRT0 )
{
    return (VEC_S_UN_1_MEMBER(psRT0->m_uRect).z);
}


/* ---- FCN_VO(tgGM_Query_Y0_RT2D) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_Query_Y0_RT2D)( VEC_OBJ_T(TgRECT2D,CPCU) psRT0 )
{
    return (VEC_S_UN_1_MEMBER(psRT0->m_uRect).y);
}


/* ---- FCN_VO(tgGM_Query_Y1_RT2D) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_Query_Y1_RT2D)( VEC_OBJ_T(TgRECT2D,CPCU) psRT0 )
{
    return (VEC_S_UN_1_MEMBER(psRT0->m_uRect).w);
}


/* ---- FCN_VO(tgGM_Query_Width_RT2D) -------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_Query_Width_RT2D)( VEC_OBJ_T(TgRECT2D,CPCU) psRT0 )
{
    return (FCN_F(tgPM_ABS)( VEC_S_UN_1_MEMBER(psRT0->m_uRect).z - VEC_S_UN_1_MEMBER(psRT0->m_uRect).x ) );
}


/* ---- FCN_VO(tgGM_Query_Height_RT2D) ------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T()  FCN_VO(tgGM_Query_Height_RT2D)( VEC_OBJ_T(TgRECT2D,CPCU) psRT0 )
{
    return (FCN_F(tgPM_ABS)( VEC_S_UN_1_MEMBER(psRT0->m_uRect).w - VEC_S_UN_1_MEMBER(psRT0->m_uRect).y ) );
}
