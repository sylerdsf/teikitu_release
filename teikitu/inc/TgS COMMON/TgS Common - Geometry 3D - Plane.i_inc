/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common - Geometry 3D - Plane.i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.17 / »GUID« 3ED3C595-046B-47FB-8785-5C167178CD24 */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Common ===================================================================================================================================================================== */

/* ---- FCN_VO(tgGM_PN_Negate) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_PN_Negate)( VEC_OBJ_T(TgPLANE,PCU) psPN0 )
{
    VEC_UN_1_MEMBER(psPN0->m_uPlnEqN) = FCN_V(tgMH_NEG)( VEC_UN_1_MEMBER(psPN0->m_uPlnEqN) );
    psPN0->m_vNormal = FCN_V(tgMH_NEG)( psPN0->m_vNormal );
    VEC_UN_1_MEMBER(psPN0->m_uD) = FCN_V(tgMH_NEG)( VEC_UN_1_MEMBER(psPN0->m_uD) );
}


/* ---- FCN_VO(tgGM_PN_Reset) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_PN_Reset)( VEC_OBJ_T(TgPLANE,PCU) psPN0 )
{
    VEC_UN_1_MEMBER(psPN0->m_uPlnEqN) = FCN_V(tgMH_SET1)( TYPE_K(0) );
    psPN0->m_vNormal = FCN_V(tgMH_SET1)( TYPE_K(0) );
    VEC_UN_1_MEMBER(psPN0->m_uD) = FCN_V(tgMH_SET1)( TYPE_K(0) );
}


/* ---- FCN_VO(tgGM_PN_Is_Valid) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgGM_PN_Is_Valid)( VEC_OBJ_T(TgPLANE,CPCU) psPN0 )
{
    if (!FCN_V(tgMH_Is_Valid)( VEC_UN_1_MEMBER(psPN0->m_uD) ))
    {
        return (false);
    };

    if (!FCN_V(tgMH_Is_Valid_Unit_Vector)( psPN0->m_vNormal ))
    {
        return (false);
    };

    return (true);
}


/* ---- FCN_VO(tgGM_PN_Is_Contained) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgGM_PN_Is_Contained)( VEC_OBJ_T(TgPLANE,CPCU) psPN0, VEC_T(1,C) vS0 )
{
    VEC_UN_T(1)                         uU0;
    
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_PN_Is_Valid)( psPN0 ) && !FCN_V(tgMH_NAN)( vS0 ));
    
    VEC_UN_1_MEMBER(uU0) = FCN_V(tgMH_DOT3)( vS0, psPN0->m_vNormal );
    return (VEC_S_UN_1_MEMBER(uU0).x <= VEC_S_UN_1_MEMBER(psPN0->m_uD).x);
}


/* ---- FCN_VO(tgGM_PN_TX) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_PN_TX)( VEC_OBJ_T(TgPLANE,PCU) psPN0, VEC_T(3,CPCU) pmM0 )
{
    VEC_UN_T(1)                         uN1, uD1;
    
    TgGEOM_ASSERT_PARAM(!FCN_V(tgMH_NAN,3)( pmM0 ));

    VEC_T(1,C)      vS0 = FCN_V(tgMH_MUL)( psPN0->m_vNormal, FCN_V(tgMH_NEG)( VEC_UN_1_MEMBER(psPN0->m_uD) ) );
    VEC_T(1,C)      vS1 = FCN_V(tgMH_TX_P,3)( vS0, pmM0 );

    VEC_UN_1_MEMBER(uN1) = FCN_V(tgMH_TX_V,3)( psPN0->m_vNormal, pmM0 );
    VEC_UN_1_MEMBER(uD1) = FCN_V(tgMH_NEG)( FCN_V(tgMH_DOT)( VEC_UN_1_MEMBER(uN1), vS1 ) );

    VEC_UN_1_MEMBER(psPN0->m_uPlnEqN) = FCN_V(tgMH_Init_ELEM)( VEC_S_UN_1_MEMBER(uN1).x, VEC_S_UN_1_MEMBER(uN1).y, VEC_S_UN_1_MEMBER(uN1).z, VEC_S_UN_1_MEMBER(uD1).x );
    psPN0->m_vNormal = VEC_UN_1_MEMBER(uN1);
    psPN0->m_uD = uD1;
}


/* ---- FCN_VO(tgGM_PN_Copy_TX) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_PN_Copy_TX)( VEC_OBJ_T(TgPLANE,PCU) psPN0, VEC_OBJ_T(TgPLANE,CPCU) psPN1, VEC_T(3,CPCU) pmM0 )
{
    VEC_UN_T(1)                         uN1, uD1;
    
    TgGEOM_ASSERT_PARAM(!FCN_V(tgMH_NAN,3)( pmM0 ));

    VEC_T(1,C)      vS0 = FCN_V(tgMH_MUL)( psPN1->m_vNormal, FCN_V(tgMH_NEG)( VEC_UN_1_MEMBER(psPN1->m_uD) ) );
    VEC_T(1,C)      vS1 = FCN_V(tgMH_TX_P,3)( vS0, pmM0 );

    VEC_UN_1_MEMBER(uN1) = FCN_V(tgMH_TX_V,3)( psPN1->m_vNormal, pmM0 );
    VEC_UN_1_MEMBER(uD1) = FCN_V(tgMH_NEG)( FCN_V(tgMH_DOT)( VEC_UN_1_MEMBER(uN1), vS1 ) );

    VEC_UN_1_MEMBER(psPN0->m_uPlnEqN) = FCN_V(tgMH_Init_ELEM)( VEC_S_UN_1_MEMBER(uN1).x, VEC_S_UN_1_MEMBER(uN1).y, VEC_S_UN_1_MEMBER(uN1).z, VEC_S_UN_1_MEMBER(uD1).x );
    psPN0->m_vNormal = VEC_UN_1_MEMBER(uN1);
    psPN0->m_uD = uD1;
}


/* ---- FCN_VO(tgGM_PN_Init_ND) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_PN_Init_ND)( VEC_OBJ_T(TgPLANE,PCU) psPN0, VEC_T(1,C) vN0, VAR_T(C) fK )
{
    VEC_UN_T(1)                         uX0;

    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Unit_Vector)( vN0 ));

    VEC_UN_1_MEMBER(uX0) = FCN_V(tgMH_SET1)( fK );
    VEC_UN_1_MEMBER(psPN0->m_uPlnEqN) = vN0;
    psPN0->m_vNormal = vN0;
    psPN0->m_uD = uX0;
    VEC_S_UN_1_MEMBER(psPN0->m_uPlnEqN).w = VEC_S_UN_1_MEMBER(uX0).w;
}


/* ---- FCN_VO(tgGM_PN_Init_NP) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_PN_Init_NP)( VEC_OBJ_T(TgPLANE,PCU) psPN0, VEC_T(1,C) vN0, VEC_T(1,C) vS0 )
{
    VEC_UN_T(1)                         uX0;

    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Unit_Vector)( vN0 ));
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Point)( vS0 ));

    VEC_UN_1_MEMBER(uX0) = FCN_V(tgMH_NEG)( FCN_V(tgMH_DOT)( vN0, vS0 ) );
    VEC_UN_1_MEMBER(psPN0->m_uPlnEqN) = vN0;
    psPN0->m_vNormal = vN0;
    psPN0->m_uD = uX0;
    VEC_S_UN_1_MEMBER(psPN0->m_uPlnEqN).w = VEC_S_UN_1_MEMBER(uX0).w;
}


/* ---- FCN_VO(tgGM_PN_Copy) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_PN_Copy)( VEC_OBJ_T(TgPLANE,PCU) psPN0, VEC_OBJ_T(TgPLANE,CPCU) psPN1 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_PN_Is_Valid)( psPN1 ));

    VEC_UN_1_MEMBER(psPN0->m_uPlnEqN) = VEC_UN_1_MEMBER(psPN1->m_uPlnEqN);
    psPN0->m_vNormal = psPN1->m_vNormal;
    VEC_S_UN_1_MEMBER(psPN0->m_uD).x = VEC_S_UN_1_MEMBER(psPN1->m_uD).x;
}


/* ---- FCN_VO(tgGM_PN_Set_PlnEqN) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_PN_Set_PlnEqN)( VEC_OBJ_T(TgPLANE,PCU) psPN0, VEC_T(1,C) vPlnEqN )
{
    TgGEOM_ASSERT_PARAM(!FCN_V(tgMH_NAN)( vPlnEqN ));

    VEC_UN_1_MEMBER(psPN0->m_uPlnEqN) = vPlnEqN;
    psPN0->m_vNormal = FCN_V(tgMH_Init_Vector)( vPlnEqN );
    VEC_UN_1_MEMBER(psPN0->m_uD) = FCN_V(tgMH_SPW)( vPlnEqN );
}


/* ---- FCN_VO(tgGM_PN_Set_Normal) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_PN_Set_Normal)( VEC_OBJ_T(TgPLANE,PCU) psPN0, VEC_T(1,C) vN0 )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Unit_Vector)( vN0 ));

    VEC_UN_1_MEMBER(psPN0->m_uPlnEqN) = vN0;
    psPN0->m_vNormal = vN0;
    VEC_UN_1_MEMBER(psPN0->m_uD) = FCN_V(tgMH_DOT)( vN0, FCN_V(tgMH_MUL)( vN0, VEC_UN_1_MEMBER(psPN0->m_uD) ) );
    VEC_S_UN_1_MEMBER(psPN0->m_uPlnEqN).w = VEC_S_UN_1_MEMBER(psPN0->m_uD).w;
}


/* ---- FCN_VO(tgGM_PN_Set_Origin) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_PN_Set_Origin)( VEC_OBJ_T(TgPLANE,PCU) psPN0, VEC_T(1,C) vS )
{
    VEC_UN_T(1)                         uX0;

    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Point)( vS ));

    VEC_UN_1_MEMBER(uX0) = FCN_V(tgMH_NEG)( FCN_V(tgMH_DOT)( psPN0->m_vNormal, vS ) );
    VEC_S_UN_1_MEMBER(psPN0->m_uPlnEqN).w = VEC_S_UN_1_MEMBER(uX0).w;
    psPN0->m_uD = uX0;
}


/* ---- FCN_VO(tgGM_PN_Set_Constant) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_PN_Set_Constant)( VEC_OBJ_T(TgPLANE,PCU) psPN0, VAR_T(C) fK )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)( fK ));

    VEC_S_UN_1_MEMBER(psPN0->m_uPlnEqN).w = fK;
    VEC_S_UN_1_MEMBER(psPN0->m_uD).x = fK;
}


/* ---- FCN_VO(tgGM_PN_Query_PlnEqN) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_PN_Query_PlnEqN)( VEC_OBJ_T(TgPLANE,CPCU) psPN0 )
{
    return (VEC_UN_1_MEMBER(psPN0->m_uPlnEqN));
}


/* ---- FCN_VO(tgGM_PN_Query_Normal) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_PN_Query_Normal)( VEC_OBJ_T(TgPLANE,CPCU) psPN0 )
{
    return (psPN0->m_vNormal);

}


/* ---- FCN_VO(tgGM_PN_Query_Constant) ------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_PN_Query_Constant)( VEC_OBJ_T(TgPLANE,CPCU) psPN0 )
{
    return (VEC_S_UN_1_MEMBER(psPN0->m_uD).x);

}




/* ---- FCN_VO(tgGM_DistSq_PN_PT) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_DistSq_PN_PT)( VEC_OBJ_T(TgPLANE,CPCU) psPN0, VEC_T(1,C) vS0 )
{
    VEC_T(1,C)      vDS = FCN_V(tgMH_DOT)( VEC_UN_1_MEMBER(psPN0->m_uPlnEqN), vS0 );
    VEC_T(1,C)      vX0 = FCN_V(tgMH_MUL)( vDS, vDS );
    VEC_T(1,C)      vX1 = FCN_V(tgMH_SEL)( vX0, FCN_V(tgMH_SET1)( -VAR_K(KTgMAX) ), FCN_V(tgMH_CMP_LT)( vDS, FCN_V(tgMH_SET1)( TYPE_K(0) )) );

    return (vX1);
}


/* ---- FCN_VO(tgGM_Dist_PN_PT) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_Dist_PN_PT)( VEC_OBJ_T(TgPLANE,CPCU) psPN0, VEC_T(1,C) vS0 )
{
    VEC_T(1,C)      vDS = FCN_V(tgMH_DOT)( VEC_UN_1_MEMBER(psPN0->m_uPlnEqN), vS0 );
    VEC_T(1,C)      vX0 = FCN_V(tgMH_SEL)( vDS, FCN_V(tgMH_SET1)( -VAR_K(KTgMAX) ), FCN_V(tgMH_CMP_LT)( vDS, FCN_V(tgMH_SET1)( TYPE_K(0) )) );

    return (vX0);
}


/* ---- FCN_VO(tgGM_Sign_Dist_PN_PT) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_Sign_Dist_PN_PT)( VEC_OBJ_T(TgPLANE,CPCU) psPN0, VEC_T(1,C) vS0 )
{
    return (FCN_V(tgMH_DOT)( VEC_UN_1_MEMBER(psPN0->m_uPlnEqN), vS0 ));
}


/* ---- FCN_VO(tgGM_Sign_Closest_PN_PT) ------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_Sign_Closest_PN_PT)( VEC_T(1,PCU) pvS0, VEC_OBJ_T(TgPLANE,CPCU) psPN0, VEC_T(1,C) vS1 )
{
    VEC_T(1,C)      vDS = FCN_V(tgMH_DOT)( VEC_UN_1_MEMBER(psPN0->m_uPlnEqN), vS1 );

    *pvS0 = FCN_V(tgMH_NMS)( vDS, psPN0->m_vNormal, vS1 );
    return (vDS);
}
