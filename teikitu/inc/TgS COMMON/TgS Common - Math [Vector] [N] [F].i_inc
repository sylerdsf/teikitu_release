/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common - Math [Vector] [N] [F].i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.16 / »GUID« 015482FC-A4BD-4E1C-AE49-A30E5728D73A */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Common ===================================================================================================================================================================== */

/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */
/*  Public Functions                                                                                                                                                               */
/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */

/* ---- FCN_V(tgMH_ADD_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_ADD_N)( VEC_N_T(1,C) v0, VEC_N_T(1,C) v1 )
{
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_ADD)( (VEC_T(1,CP))&v0, (VEC_T(1,CP))&v1 );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_MAD_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_MAD_N)( VEC_N_T(1,C) v0, VEC_N_T(1,C) v1, VEC_N_T(1,C) v2 )
{
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_MAD)( (VEC_T(1,CP))&v0, (VEC_T(1,CP))&v1, (VEC_T(1,CP))&v2 );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_NMS_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_NMS_N)( VEC_N_T(1,C) v0, VEC_N_T(1,C) v1, VEC_N_T(1,C) v2 )
{
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_NMS)( (VEC_T(1,CP))&v0, (VEC_T(1,CP))&v1, (VEC_T(1,CP))&v2 );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_DOT_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_DOT_N)( VEC_N_T(1,C) v0, VEC_N_T(1,C) v1 )
{
    VAR_T() fResult = FCN_V(tgMH_DOT)( (VEC_T(1,CP))&v0, (VEC_T(1,CP))&v1 );
    return FCN_V(tgMH_SET1_S_N)( fResult );
}


/* ---- FCN_V(tgMH_MUL_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_MUL_N)( VEC_N_T(1,C) v0, VEC_N_T(1,C) v1 )
{
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_MUL)( (VEC_T(1,CP))&v0, (VEC_T(1,CP))&v1 );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_DIV_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_DIV_N)( VEC_N_T(1,C) v0, VEC_N_T(1,C) v1 )
{
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_DIV)( (VEC_T(1,CP))&v0, (VEC_T(1,CP))&v1 );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_SUB_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_SUB_N)( VEC_N_T(1,C) v0, VEC_N_T(1,C) v1 )
{
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_SUB)( (VEC_T(1,CP))&v0, (VEC_T(1,CP))&v1 );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_LSQ_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_LSQ_N)( VEC_N_T(1,C) v0 )
{
    VAR_T() fResult = FCN_V(tgMH_LSQ)( (VEC_T(1,CP))&v0 );
    return FCN_V(tgMH_SET1_S_N)( fResult );
}


/* ---- FCN_V(tgMH_LEN_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_LEN_N)( VEC_N_T(1,C) v0 )
{
    VAR_T() fResult = FCN_F(tgPM_SQRT)( FCN_V(tgMH_LSQ)( (VEC_T(1,CP))&v0 ) );
    return FCN_V(tgMH_SET1_S_N)( fResult );
}


/* ---- FCN_V(tgMH_NEG_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_NEG_N)( VEC_N_T(1,C) v0 )
{
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_NEG)( (VEC_T(1,CP))&v0 );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_SQRT_N) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_SQRT_N)( VEC_N_T(1,C) v0 )
{
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_SQRT)( (VEC_T(1,CP))&v0 );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_RSQRT_N) ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_RSQRT_N)( VEC_N_T(1,C) v0 )
{
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_RSQRT)( (VEC_T(1,CP))&v0 );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_NORM_N) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_NORM_N)( VEC_N_T(1,C) v0 )
{
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_NORM)( (VEC_T(1,CP))&v0 );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_NORM_LEN_N) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_NORM_LEN_N)( VEC_N_T(1,PCU) pfLength, VEC_N_T(1,C) v0 )
{
    TgUN_V128                           vResult;
    VAR_T()                              fLen;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_NORM_LEN)( &fLen, (VEC_T(1,CP))&v0 );
    *pfLength = FCN_V(tgMH_SET1_S_N)( fLen );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_FLR_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_FLR_N)( VEC_N_T(1,C) v0 )
{
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_FLR)( (VEC_T(1,CP))&v0 );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_CEL_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_CEL_N)( VEC_N_T(1,C) v0 )
{
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_CEL)( (VEC_T(1,CP))&v0 );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_CLP_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_CLP_N)( VEC_N_T(1,C) v0, VEC_N_T(1,C) vMin, VEC_N_T(1,C) vMax )
{
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_CLP)( (VEC_T(1,CP))&v0, (VEC_T(1,CP))&vMin, (VEC_T(1,CP))&vMax );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_SAT_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_SAT_N)( VEC_N_T(1,C) v0 )
{
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(vResult.m_) = FCN_V(tgMH_SAT)( (VEC_T(1,CP))&v0 );
    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_NaN_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_NaN_N)( VEC_N_T(1,C) v0 )
{
    TgUINT_F32                          uiIndex = 0;
    TgUN_V128                           vResult;

    for (uiIndex = 0; uiIndex < TEMPLATE__VECTOR_DIM; ++uiIndex)
    {
        if (FCN_F( tgPM_NAN )(((VEC_T(1,CP))&v0)->m_aData[uiIndex]))
        {
            tgMM_Set_U08_0xFF( VAR_UN_1_MEMBER(vResult.m_).m_aData + uiIndex, sizeof( VAR_T() ) );
        }
        else
        {
            tgMM_Set_U08_0x00( VAR_UN_1_MEMBER(vResult.m_).m_aData + uiIndex, sizeof( VAR_T() ) );
        };
    };

    return (VAR_UN_1_MEMBER(vResult.m_N_));
}


/* ---- FCN_V(tgMH_BND_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_V(tgMH_BND_N)( VEC_N_T(1,C) v0, VEC_N_T(1,C) vBound )
{
    TgUN_CONST_PTR_V128                 sV0, sBound;
    TgUN_V128                           vResult;

    VAR_UN_1_MEMBER(sV0.m_p) = &v0;
    VAR_UN_1_MEMBER(sBound.m_p) = &vBound;

    for (TgRSIZE uiIndex = 0; uiIndex < TEMPLATE__VECTOR_DIM; ++uiIndex)
    {
        if (
               ( -VAR_UN_1_MEMBER(sBound.m_p)->m_aData[uiIndex] > VAR_UN_1_MEMBER(sV0.m_p)->m_aData[uiIndex] )
            || (  VAR_UN_1_MEMBER(sV0.m_p)->m_aData[uiIndex] > VAR_UN_1_MEMBER(sBound.m_p)->m_aData[uiIndex] ) )
        {
            tgMM_Set_U08_0x00( VAR_UN_1_MEMBER(vResult.m_).m_aData + uiIndex, sizeof( VAR_T() ) );
        }
        else
        {
            tgMM_Set_U08_0xFF( VAR_UN_1_MEMBER(vResult.m_).m_aData + uiIndex, sizeof( VAR_T() ) );
        };
    };

    return (VAR_UN_1_MEMBER(vResult.m_N_));
}
