/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common - Geometry 3D - Torus.i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.17 / »GUID« 3ED3C595-046B-47FB-8785-5C167178CD24 */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Common ===================================================================================================================================================================== */

/* ---- FCN_VO(tgGM_TS_Reset) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_TS_Reset)( VEC_OBJ_T(TgTORUS,PCU) psTS0 )
{
    FCN_VO(tgGM_CI_Reset)( &psTS0->m_sCI );
    psTS0->m_fRI = TYPE_K(0);
}


/* ---- FCN_VO(tgGM_TS_Volume) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_TS_Volume)( VEC_OBJ_T(TgTORUS,CPCU) psTS0 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_TS_Is_Valid)( psTS0 ));
    return (VAR_K(KTgTWO_PI)*psTS0->m_sCI.m_fRadius*(VAR_K(KTgPI) * psTS0->m_fRI * psTS0->m_fRI));
}


/* ---- FCN_VO(tgGM_TS_Area) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_TS_Area)( VEC_OBJ_T(TgTORUS,CPCU) psTS0 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_TS_Is_Valid)( psTS0 ));
    return (VAR_K(KTgTWO_PI)*psTS0->m_sCI.m_fRadius*VAR_K(KTgTWO_PI)*psTS0->m_fRI);

}


/* ---- FCN_VO(tgGM_TS_Sweep_BA) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_TS_Sweep_BA)( VEC_OBJ_T(TgBOXAA,PCU) psBA0, VEC_OBJ_T(TgTORUS,CPCU) psTS1, VEC_T(1,C) vDT )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Vector)( vDT ));

    FCN_VO(tgGM_TS_BA)( psBA0, psTS1 );
    FCN_VO(tgGM_BA_Sweep)( psBA0, vDT );
}


/* ---- FCN_VO(tgGM_TS_TX) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_TS_TX)( VEC_OBJ_T(TgTORUS,PCU) psTS0, VEC_T(3,CPCU) pmM0 )
{
    FCN_VO(tgGM_CI_TX)( &psTS0->m_sCI, pmM0 );
}


/* ---- FCN_VO(tgGM_TS_Copy_TX) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_TS_Copy_TX)( VEC_OBJ_T(TgTORUS,PCU) psTS0, VEC_OBJ_T(TgTORUS,CPCU) psTS1, VEC_T(3,CPCU) pmM0 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_TS_Is_Valid)( psTS1 ) && !FCN_V(tgMH_NAN,3)( pmM0 ));

    FCN_VO(tgGM_CI_Copy_TX)( &psTS0->m_sCI, &psTS1->m_sCI, pmM0 );
    psTS0->m_fRI = psTS1->m_fRI;
}


/* ---- FCN_VO(tgGM_TS_Init) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_TS_Init)( VEC_OBJ_T(TgTORUS,PCU) psTS0, VEC_T(3,CPCU) pmReference_Frame, VAR_T(C) fRI, VAR_T(C) fRO )
{
    TgGEOM_ASSERT_PARAM(fRI <= fRO);
    FCN_VO(tgGM_CI_Init)( &psTS0->m_sCI, pmReference_Frame, fRO );
    FCN_VO(tgGM_TS_Set_Inner_Radius)( psTS0, fRI );
}


/* ---- FCN_VO(tgGM_TS_Copy) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_TS_Copy)( VEC_OBJ_T(TgTORUS,PCU) psTS0, VEC_OBJ_T(TgTORUS,CPCU) psTS1 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_TS_Is_Valid)( psTS1 ));

    FCN_VO(tgGM_CI_Copy)( &psTS0->m_sCI, &psTS1->m_sCI );
    psTS0->m_fRI = psTS1->m_fRI;
}


/* ---- FCN_VO(tgGM_TS_Set_Reference_Frame) -------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_TS_Set_Reference_Frame)( VEC_OBJ_T(TgTORUS,PCU) psTS0, VEC_T(3,CPCU) pmReference_Frame )
{
    FCN_VO(tgGM_CI_Set_Reference_Frame)( &psTS0->m_sCI, pmReference_Frame );
}


/* ---- FCN_VO(tgGM_TS_Set_Origin) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_TS_Set_Origin)( VEC_OBJ_T(TgTORUS,PCU) psTS0, VEC_T(1,C) vS0 )
{
    FCN_VO(tgGM_CI_Set_Origin)( &psTS0->m_sCI, vS0 );
}


/* ---- FCN_VO(tgGM_TS_Set_Inner_Radius) ----------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_TS_Set_Inner_Radius)( VEC_OBJ_T(TgTORUS,PCU) psTS0, VAR_T(C) fRad )
{
    TgGEOM_ASSERT_PARAM(fRad >= TYPE_K(0) && fRad <= psTS0->m_sCI.m_fRadius);
    psTS0->m_fRI = fRad;
}


/* ---- FCN_VO(tgGM_TS_Set_Outer_Radius) ----------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_TS_Set_Outer_Radius)( VEC_OBJ_T(TgTORUS,PCU) psTS0, VAR_T(C) fRad )
{
    TgGEOM_ASSERT_PARAM(psTS0->m_fRI <= fRad);
    FCN_VO(tgGM_CI_Set_Radius)( &psTS0->m_sCI, fRad );
}


/* ---- FCN_VO(tgGM_TS_Query_Origin) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_TS_Query_Origin)( VEC_OBJ_T(TgTORUS,CPCU) psTS0 )
{
    return (FCN_VO(tgGM_CI_Query_Origin)( &psTS0->m_sCI ));
}


/* ---- FCN_VO(tgGM_TS_Query_Normal) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_TS_Query_Normal)( VEC_OBJ_T(TgTORUS,CPCU) psTS0 )
{
    return (FCN_VO(tgGM_CI_Query_Normal)( &psTS0->m_sCI ));
}


/* ---- FCN_VO(tgGM_TS_Query_Inner_Radius) --------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_TS_Query_Inner_Radius)( VEC_OBJ_T(TgTORUS,CPCU) psTS0 )
{
    return (psTS0->m_fRI);
}


/* ---- FCN_VO(tgGM_TS_Query_Outer_Radius) --------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_TS_Query_Outer_Radius)( VEC_OBJ_T(TgTORUS,CPCU) psTS0 )
{
    return (FCN_VO(tgGM_CI_Query_Radius)( &psTS0->m_sCI ));
}
