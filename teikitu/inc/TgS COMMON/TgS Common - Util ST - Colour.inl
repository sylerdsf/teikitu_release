/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common - Util ST - Colour.inl
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.17 / »GUID« 3ED3C595-046B-47FB-8785-5C167178CD24 */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
#if !defined(TGS_COMMON_UTIL_ST_COLOUR_INL)
#define TGS_COMMON_UTIL_ST_COLOUR_INL
#pragma once


/* == Common ===================================================================================================================================================================== */

/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */
/*  Public Functions                                                                                                                                                               */
/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */

/* ---- TgFCOLOUR ---------------------------------------------------------------------------------------------------------------------------------------------------------------- */

/* ---- tgCM_CL_F32_Init_F32 ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgCM_CL_F32_Init_F32( TgFLOAT32_C fR, TgFLOAT32_C fG, TgFLOAT32_C fB, TgFLOAT32_C fA )
{
    return (tgMH_Init_ELEM_F32_04_1( fR, fG, fB, fA ));
}


/* ---- tgCM_CL_F32_Init_U32 ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVEC_F32_04_1 tgCM_CL_F32_Init_U32( TgUINT_F32_C uiColour )
{
    return (tgMH_Init_ELEM_F32_04_1( TgCOLOUR_R( uiColour ) / 255.0F, TgCOLOUR_G(uiColour) / 255.0F, TgCOLOUR_B( uiColour ) / 255.0F, TgCOLOUR_A( uiColour ) / 255.0F ));
}


/* ---- tgCM_CL_F32_Brightness_U16 ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgUINT_F16 tgCM_CL_F32_Brightness_U16( TgVEC_F32_04_1_C vCL )
{
    return ((TgUINT_F16 )(tgCM_CLP_F32( tgCM_CL_F32_Brightness_F32( vCL ), 0.0F, 1.0F )* (TgFLOAT32)KTgMAX_U16));
}


/* ---- tgCM_CL_F32_Brightness_F32 ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgFLOAT32 tgCM_CL_F32_Brightness_F32( TgVEC_F32_04_1_C vCL )
{
    return ((tgCM_CL_F32_Query_R_F32( vCL ) + tgCM_CL_F32_Query_G_F32( vCL ) + tgCM_CL_F32_Query_B_F32( vCL )) / 3.0F);
}


/* ---- tgCM_CL_F32_Lightness ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgFLOAT32 tgCM_CL_F32_Lightness( TgVEC_F32_04_1_C vCL )
{
    return (0.5F*(
          tgCM_MAX_F32( tgCM_CL_F32_Query_R_F32( vCL ), tgCM_MAX_F32( tgCM_CL_F32_Query_G_F32( vCL ), tgCM_CL_F32_Query_B_F32( vCL ) ) )
        + tgCM_MIN_F32( tgCM_CL_F32_Query_R_F32( vCL ), tgCM_MIN_F32( tgCM_CL_F32_Query_G_F32( vCL ), tgCM_CL_F32_Query_B_F32( vCL ) ) )
    ));
}


/* ---- tgCM_CL_F32_Luminance ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgFLOAT32 tgCM_CL_F32_Luminance( TgVEC_F32_04_1_C vCL )
{
    return (0.3f*tgCM_CL_F32_Query_R_F32( vCL ) + 0.59f*tgCM_CL_F32_Query_G_F32( vCL ) + 0.11f*tgCM_CL_F32_Query_B_F32( vCL ));
}


/* ---- tgCM_CL_F32_Query_R_F32 -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgFLOAT32 tgCM_CL_F32_Query_R_F32( TgVEC_F32_04_1_C vCL )
{
    return (((TgFLOAT32_CP)(&vCL))[0]);
}


/* ---- tgCM_CL_F32_Query_G_F32 -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgFLOAT32 tgCM_CL_F32_Query_G_F32( TgVEC_F32_04_1_C vCL )
{
    return (((TgFLOAT32_CP)(&vCL))[1]);
}


/* ---- tgCM_CL_F32_Query_B_F32 -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgFLOAT32 tgCM_CL_F32_Query_B_F32( TgVEC_F32_04_1_C vCL )
{
    return (((TgFLOAT32_CP)(&vCL))[2]);
}


/* ---- tgCM_CL_F32_Query_A_F32 -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgFLOAT32 tgCM_CL_F32_Query_A_F32( TgVEC_F32_04_1_C vCL )
{
    return (((TgFLOAT32_CP)(&vCL))[3]);
}


/* ---- TgCOLOUR32 --------------------------------------------------------------------------------------------------------------------------------------------------------------- */

/* ---- tgCM_CL_U32_Init_U08 ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgCOLOUR32 tgCM_CL_U32_Init_U08( TgUINT_F08_C uiRed, TgUINT_F08_C uiGreen, TgUINT_F08_C uiBlue, TgUINT_F08_C uiAlpha )
{
    TgCOLOUR32                          sCL;

    sCL.m_uiRed = uiRed;
    sCL.m_uiGreen = uiGreen;
    sCL.m_uiBlue = uiBlue;
    sCL.m_uiAlpha = uiAlpha;

    return (sCL);
}


/* ---- tgCM_CL_U32_Init_U32 ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgCOLOUR32 tgCM_CL_U32_Init_U32( TgUINT_F32_C uiColour )
{
    TgCOLOUR32                          sCL;

    sCL.m_uiRed = TgCOLOUR_R( uiColour );
    sCL.m_uiGreen = TgCOLOUR_G(uiColour);
    sCL.m_uiBlue = TgCOLOUR_B( uiColour );
    sCL.m_uiAlpha = TgCOLOUR_A( uiColour );

    return (sCL);
}


/* ---- tgCM_CL_U32_Init_F32 ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgCOLOUR32 tgCM_CL_U32_Init_F32( TgVEC_F32_04_1_C vCL )
{
    TgCOLOUR32                          sCL;

    sCL.m_uiRed = (TgUINT_E08)(tgCM_CLP_F32( tgCM_CL_F32_Query_R_F32( vCL ), 0.0F, 1.0F ) * 255.0F);
    sCL.m_uiGreen = (TgUINT_E08)(tgCM_CLP_F32( tgCM_CL_F32_Query_G_F32( vCL ), 0.0F, 1.0F ) * 255.0F);
    sCL.m_uiBlue = (TgUINT_E08)(tgCM_CLP_F32( tgCM_CL_F32_Query_B_F32( vCL ), 0.0F, 1.0F ) * 255.0F);
    sCL.m_uiAlpha = (TgUINT_E08)(tgCM_CLP_F32( tgCM_CL_F32_Query_A_F32( vCL ), 0.0F, 1.0F ) * 255.0F);

    return (sCL);
}


/* ---- tgCM_CL_U32_Brightness_U16 ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgUINT_F16 tgCM_CL_U32_Brightness_U16( TgCOLOUR32_C sCL )
{
    return ((TgUINT_F16 )(tgCM_CLP_F32( tgCM_CL_U32_Brightness_F32( sCL ), 0.0F, 1.0F )* (TgFLOAT32)KTgMAX_U16));
}


/* ---- tgCM_CL_U32_Brightness_F32 ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgFLOAT32 tgCM_CL_U32_Brightness_F32( TgCOLOUR32_C sCL )
{
    return ((tgCM_CL_U32_Query_R_F32( sCL ) + tgCM_CL_U32_Query_B_F32( sCL ) + tgCM_CL_U32_Query_G_F32( sCL )) / 3.0F);
}


/* ---- tgCM_CL_U32_Lightness ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgFLOAT32 tgCM_CL_U32_Lightness( TgCOLOUR32_C sCL )
{
    return (0.5F*(
          tgCM_MAX_F32( tgCM_CL_U32_Query_R_F32( sCL ), tgCM_MAX_F32( tgCM_CL_U32_Query_G_F32( sCL ), tgCM_CL_U32_Query_B_F32( sCL ) ) )
        + tgCM_MIN_F32( tgCM_CL_U32_Query_R_F32( sCL ), tgCM_MIN_F32( tgCM_CL_U32_Query_G_F32( sCL ), tgCM_CL_U32_Query_B_F32( sCL ) ) )
    ));
}


/* ---- tgCM_CL_U32_Luminance ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgFLOAT32 tgCM_CL_U32_Luminance( TgCOLOUR32_C sCL )
{
    return (0.3f*tgCM_CL_U32_Query_R_F32( sCL ) + 0.59f*tgCM_CL_U32_Query_G_F32( sCL ) + 0.11f*tgCM_CL_U32_Query_B_F32( sCL ));
}


/* ---- tgCM_CL_U32_Query_R_U32 -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgUINT_F08 tgCM_CL_U32_Query_R_U32( TgCOLOUR32_C sCL )
{
    return (sCL.m_uiRed);
}


/* ---- tgCM_CL_U32_Query_G_U32 -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgUINT_F08 tgCM_CL_U32_Query_G_U32( TgCOLOUR32_C sCL )
{
    return (sCL.m_uiGreen);
}


/* ---- tgCM_CL_U32_Query_B_U32 -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgUINT_F08 tgCM_CL_U32_Query_B_U32( TgCOLOUR32_C sCL )
{
    return (sCL.m_uiBlue);
}


/* ---- tgCM_CL_U32_Query_A_U32 -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgUINT_F08 tgCM_CL_U32_Query_A_U32( TgCOLOUR32_C sCL )
{
    return (sCL.m_uiAlpha);
}


/* ---- tgCM_CL_U32_Query_R_F32 -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgFLOAT32 tgCM_CL_U32_Query_R_F32( TgCOLOUR32_C sCL )
{
    return (tgCM_CL_U32_Query_R_U32( sCL ) / 255.0F);
}


/* ---- tgCM_CL_U32_Query_G_F32 -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgFLOAT32 tgCM_CL_U32_Query_G_F32( TgCOLOUR32_C sCL )
{
    return (tgCM_CL_U32_Query_G_U32( sCL ) / 255.0F);
}


/* ---- tgCM_CL_U32_Query_B_F32 -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgFLOAT32 tgCM_CL_U32_Query_B_F32( TgCOLOUR32_C sCL )
{
    return (tgCM_CL_U32_Query_B_U32( sCL ) / 255.0F);
}


/* ---- tgCM_CL_U32_Query_A_F32 -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgFLOAT32 tgCM_CL_U32_Query_A_F32( TgCOLOUR32_C sCL )
{
    return (tgCM_CL_U32_Query_A_U32( sCL ) / 255.0F);
}


/* =============================================================================================================================================================================== */
#endif
