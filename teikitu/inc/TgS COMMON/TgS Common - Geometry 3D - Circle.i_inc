/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common - Geometry 3D - Circle.i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.17 / »GUID« 3ED3C595-046B-47FB-8785-5C167178CD24 */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Common ===================================================================================================================================================================== */

/* ---- FCN_VO(tgGM_CI_Reset) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_CI_Reset)( VEC_OBJ_T(TgCIRCLE,PCU) psCI0 )
{
    FCN_V(tgMH_CLI,3)( &psCI0->m_mReference_Frame );
    psCI0->m_fRadius = TYPE_K(0);
    psCI0->m_fRadiusSq = TYPE_K(0);
}


/* ---- FCN_VO(tgGM_CI_Area) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_CI_Area)( VEC_OBJ_T(TgCIRCLE,CPCU) psCI0 )
{
    return (VAR_K(KTgPI)*psCI0->m_fRadiusSq);
}


/* ---- FCN_VO(tgGM_CI_Sweep_BA) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_CI_Sweep_BA)( VEC_OBJ_T(TgBOXAA,PCU) psBA0, VEC_OBJ_T(TgCIRCLE,CPCU) psCI0, VEC_T(1,C) vDT )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Vector)( vDT ));

    FCN_VO(tgGM_CI_BA)( psBA0, psCI0 );
    FCN_VO(tgGM_BA_Sweep)( psBA0, vDT );
}


/* ---- FCN_VO(tgGM_CI_Is_Contained) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgGM_CI_Is_Contained)( VEC_OBJ_T(TgCIRCLE,CPCU) psCI0, VEC_T(1,C) vS0 )
{
    VEC_T(1)                            vA0, vA1, vA2, vC0;
    VEC_UN_T(1)                         uDS, uDS_A0, uDS_A1, uDS_A2;

    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_CI_Is_Valid)( psCI0 ) && FCN_V(tgMH_Is_Valid_Point)( vS0 ));

    FCN_V(tgMH_Query_Reference_Frame,3)( &vA0, &vA1, &vA2, &vC0, &psCI0->m_mReference_Frame );

    VEC_UN_1_MEMBER(uDS) = FCN_V(tgMH_SUB)( vS0, vC0 );
    VEC_UN_1_MEMBER(uDS_A1) = FCN_V(tgMH_DOT)( VEC_UN_1_MEMBER(uDS), vA1 );

    if (!FCN_F(tgCM_NR0)( VEC_S_UN_1_MEMBER(uDS_A1).x ))
    {
        return (false);
    };

    VEC_UN_1_MEMBER(uDS_A0) = FCN_V(tgMH_DOT)( VEC_UN_1_MEMBER(uDS), vA0 );
    VEC_UN_1_MEMBER(uDS_A2) = FCN_V(tgMH_DOT)( VEC_UN_1_MEMBER(uDS), vA2 );

    return (FCN_F(tgCM_NR0)( VEC_S_UN_1_MEMBER(uDS_A0).x*VEC_S_UN_1_MEMBER(uDS_A0).x + VEC_S_UN_1_MEMBER(uDS_A2).x*VEC_S_UN_1_MEMBER(uDS_A2).x - psCI0->m_fRadiusSq ));
}


/* ---- FCN_VO(tgGM_CI_TX) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_CI_TX)( VEC_OBJ_T(TgCIRCLE,PCU) psCI0, VEC_T(3,CPCU) pmM0 )
{
    TgGEOM_ASSERT_PARAM(!FCN_V(tgMH_NAN,3)( pmM0 ));

    FCN_V(tgMH_CAT,3)( &psCI0->m_mReference_Frame, &psCI0->m_mReference_Frame, pmM0 );
}


/* ---- FCN_VO(tgGM_CI_Copy_TX) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_CI_Copy_TX)( VEC_OBJ_T(TgCIRCLE,PCU) psCI0, VEC_OBJ_T(TgCIRCLE,CPCU) psCI1, VEC_T(3,CPCU) pmM0 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_CI_Is_Valid)( psCI1 ) && !FCN_V(tgMH_NAN,3)( pmM0 ));

    FCN_V(tgMH_CAT,3)( &psCI0->m_mReference_Frame, &psCI1->m_mReference_Frame, pmM0 );
    psCI0->m_fRadius = psCI1->m_fRadius;
    psCI0->m_fRadiusSq = psCI1->m_fRadiusSq;
}


/* ---- FCN_VO(tgGM_CI_Init) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_CI_Init)( VEC_OBJ_T(TgCIRCLE,PCU) psCI0, VEC_T(3,CPCU) pmM0, VAR_T(C) fRadius )
{
    FCN_VO(tgGM_CI_Set_Reference_Frame)( psCI0, pmM0 );
    FCN_VO(tgGM_CI_Set_Radius)( psCI0, fRadius );
}


/* ---- FCN_VO(tgGM_CI_Copy) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_CI_Copy)( VEC_OBJ_T(TgCIRCLE,PCU) psCI0, VEC_OBJ_T(TgCIRCLE,CPCU) psCI1 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_CI_Is_Valid)( psCI1 ));

    psCI0->m_mReference_Frame = psCI1->m_mReference_Frame;
    psCI0->m_fRadius = psCI1->m_fRadius;
    psCI0->m_fRadiusSq = psCI1->m_fRadiusSq;
}


/* ---- FCN_VO(tgGM_CI_Set_Reference_Frame) -------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_CI_Set_Reference_Frame)( VEC_OBJ_T(TgCIRCLE,PCU) psCI0, VEC_T(3,CPCU) pmReference_Frame )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Reference_Frame,3)( pmReference_Frame ));
    psCI0->m_mReference_Frame = *pmReference_Frame;
}


/* ---- FCN_VO(tgGM_CI_Set_Origin) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_CI_Set_Origin)( VEC_OBJ_T(TgCIRCLE,PCU) psCI0, VEC_T(1,C) vS0 )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Point)( vS0 ));
    FCN_V(tgMH_Set_T,3)( &psCI0->m_mReference_Frame, vS0 );
}


/* ---- FCN_VO(tgGM_CI_Set_Radius) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_CI_Set_Radius)( VEC_OBJ_T(TgCIRCLE,PCU) psCI0, VAR_T(C) fRadius )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)( fRadius ) && fRadius > TYPE_K(0));

    psCI0->m_fRadius = fRadius;
    psCI0->m_fRadiusSq = fRadius*fRadius;
}


/* ---- FCN_VO(tgGM_CI_Query_Origin) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_CI_Query_Origin)( VEC_OBJ_T(TgCIRCLE,CPCU) psCI0 )
{
    return (FCN_V(tgMH_Query_Axis_3,3)( &psCI0->m_mReference_Frame ));
}


/* ---- FCN_VO(tgGM_CI_Query_U) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_CI_Query_U)( VEC_OBJ_T(TgCIRCLE,CPCU) psCI0 )
{
    return (FCN_V(tgMH_Query_Axis_0,3)( &psCI0->m_mReference_Frame ));
}


/* ---- FCN_VO(tgGM_CI_Query_Normal) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_CI_Query_Normal)( VEC_OBJ_T(TgCIRCLE,CPCU) psCI0 )
{
    return (FCN_V(tgMH_Query_Axis_1,3)( &psCI0->m_mReference_Frame ));
}


/* ---- FCN_VO(tgGM_CI_Query_V) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_CI_Query_V)( VEC_OBJ_T(TgCIRCLE,CPCU) psCI0 )
{
    return (FCN_V(tgMH_Query_Axis_2,3)( &psCI0->m_mReference_Frame ));
}


/* ---- FCN_VO(tgGM_CI_Query_Radius) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_CI_Query_Radius)( VEC_OBJ_T(TgCIRCLE,CPCU) psCI0 )
{
    return (psCI0->m_fRadius);
}


/* ---- FCN_VO(tgGM_CI_Query_Radius_Sq) ------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_CI_Query_Radius_Sq)( VEC_OBJ_T(TgCIRCLE,CPCU) psCI0 )
{
    return (psCI0->m_fRadiusSq);
}
