/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common - Geometry 3D - Triangle [Edge].i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.16 / »GUID« 015482FC-A4BD-4E1C-AE49-A30E5728D73A */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Common ===================================================================================================================================================================== */

/* ---- FCN_VO(tgGM_ET_Calc_Normal) ---------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Calc_Normal)( VEC_OBJ_T(TgETRI,PCU) psET0 )
{
    VEC_T(1,C)                          vX0 = FCN_V(tgMH_NEG)( psET0->m_avEdge + 2 );

    psET0->m_sPT.m_vNormal = FCN_V(tgMH_UCX)( psET0->m_avEdge + 0, &vX0 );
}


/* ---- FCN_VO(tgGM_ET_Calc_Point) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Calc_Point)( VEC_T(1,P) pvRT, VEC_OBJ_T(TgETRI,CPCU) psET1, VAR_T(C) fT0, VAR_T(C) fT1 )
{
    VEC_T(1,C)                          vX0 = FCN_V(tgMH_NMS_SVV)( fT1, psET1->m_avEdge + 2, psET1->m_sPT.m_avPoint + 0 );

    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_ET_Is_Valid)(psET1) && !FCN_F(tgPM_NAN)(fT0) && !FCN_F(tgPM_NAN)(fT1));

    *pvRT = FCN_V(tgMH_NMS_SVV)( fT0, psET1->m_avEdge + 0, &vX0 );
}


/* ---- FCN_VO(tgGM_ET_Reset) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Reset)( VEC_OBJ_T(TgETRI,PCU) psET0 )
{
    FCN_VO(tgGM_PT_Reset)( &psET0->m_sPT );

    psET0->m_avEdge[0] = FCN_V(tgMH_SETV_S)( TYPE_K(0), TYPE_K(0), TYPE_K(0) );
    psET0->m_avEdge[1] = FCN_V(tgMH_SETV_S)( TYPE_K(0), TYPE_K(0), TYPE_K(0) );
    psET0->m_avEdge[2] = FCN_V(tgMH_SETV_S)( TYPE_K(0), TYPE_K(0), TYPE_K(0) );
}


/* ---- FCN_VO(tgGM_ET_Area) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_ET_Area)( VEC_OBJ_T(TgETRI,CPCU) psET1 )
{
    VEC_T(1,C)                          vX0 = FCN_V(tgMH_CX)( psET1->m_avEdge + 0, psET1->m_avEdge + 2 );

    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_ET_Is_Valid)(psET1));

    return (TYPE_K(0,5) * FCN_V(tgMH_LEN)( &vX0) );
}


/* ---- FCN_VO(tgGM_ET_BA) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_BA)( VEC_OBJ_T(TgBOXAA,PCU) psBA0, VEC_OBJ_T(TgETRI,CPCU) psET1 )
{
    FCN_VO(tgGM_PT_BA)( psBA0, &psET1->m_sPT );
}


/* ---- FCN_VO(tgGM_ET_Sweep_BA) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Sweep_BA)( VEC_OBJ_T(TgBOXAA,PCU) psBA0, VEC_OBJ_T(TgETRI,CPCU) psET1, VEC_T(1,CPCU) pvDT )
{
    FCN_VO(tgGM_ET_BA)( psBA0, psET1 );
    FCN_VO(tgGM_BA_Sweep)( psBA0, pvDT );
}


/* ---- FCN_VO(tgGM_ET_Project) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Project)( VAR_T(PCU) fMin, VAR_T(PCU) fMax, VEC_OBJ_T(TgETRI,CPCU) psET1, VEC_T(1,CPCU) pvDN )
{
    FCN_VO(tgGM_PT_Project)( fMin, fMax, &psET1->m_sPT, pvDN );
}


/* ---- FCN_VO(tgGM_ET_Is_Contained) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgGM_ET_Is_Contained)( VEC_OBJ_T(TgETRI,CPCU) psET1, VEC_T(1,CPCU) pvS0 )
{
    VEC_T(1,C)                          vDT = FCN_V(tgMH_SUB)( pvS0, psET1->m_sPT.m_avPoint + 0 );
    VEC_T(1,C)                          vN0 = FCN_V(tgMH_CX)( &psET1->m_sPT.m_vNormal, psET1->m_avEdge + 0 );
    VEC_T(1,C)                          vN1 = FCN_V(tgMH_CX)( &psET1->m_sPT.m_vNormal, psET1->m_avEdge + 1 );
    VEC_T(1,C)                          vN2 = FCN_V(tgMH_CX)( &psET1->m_sPT.m_vNormal, psET1->m_avEdge + 2 );

    if ((FCN_V(tgMH_DOT3)(&vDT, &vN0) < TYPE_K(0)) || (FCN_V(tgMH_DOT3)(&vDT, &vN2) < TYPE_K(0)))
    {
        return (false);
    }
    else
    {
        VEC_T(1,C)                          vX0 = FCN_V(tgMH_SUB)( &vDT, psET1->m_avEdge + 0 );

        if (FCN_V(tgMH_DOT3)(&vX0, &vN1) < TYPE_K(0))
        {
            return (false);
        };
    };

    return (true);
}


/* ---- FCN_VO(tgGM_ET_TX) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_TX)( VEC_OBJ_T(TgETRI,PCU) psET0, VEC_04_3_T(CPCU) pxM0 )
{
    FCN_VO(tgGM_PT_TX)( &psET0->m_sPT, pxM0 );
    psET0->m_avEdge[0] = FCN_04_3_V(tgMH_TX_V)( pxM0, psET0->m_avEdge + 0 );
    psET0->m_avEdge[1] = FCN_04_3_V(tgMH_TX_V)( pxM0, psET0->m_avEdge + 1 );
    psET0->m_avEdge[2] = FCN_04_3_V(tgMH_TX_V)( pxM0, psET0->m_avEdge + 2 );
}


/* ---- FCN_VO(tgGM_ET_Copy_TX) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Copy_TX)( VEC_OBJ_T(TgETRI,PCU) psET0, VEC_OBJ_T(TgETRI,CPCU) psET1, VEC_04_3_T(CPCU) pxM0 )
{
    FCN_VO(tgGM_PT_Copy_TX)( &psET0->m_sPT, &psET1->m_sPT, pxM0 );
    psET0->m_avEdge[0] = FCN_04_3_V(tgMH_TX_V)( pxM0, psET1->m_avEdge + 0 );
    psET0->m_avEdge[1] = FCN_04_3_V(tgMH_TX_V)( pxM0, psET1->m_avEdge + 1 );
    psET0->m_avEdge[2] = FCN_04_3_V(tgMH_TX_V)( pxM0, psET1->m_avEdge + 2 );
}


/* ---- FCN_VO(tgGM_ET_Init_PN) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Init_PN)( VEC_OBJ_T(TgETRI,PCU) psET0, VEC_T(1,CPCU) pvS0, VEC_T(1,CPCU) pvS1, VEC_T(1,CPCU) pvS2, VEC_T(1,CPCU) pvN )
{
    FCN_VO(tgGM_PT_Init_PN)( &psET0->m_sPT, pvS0, pvS1, pvS2, pvN );
    psET0->m_avEdge[0] = FCN_V(tgMH_SUB)( pvS1, pvS0 );
    psET0->m_avEdge[1] = FCN_V(tgMH_SUB)( pvS2, pvS1 );
    psET0->m_avEdge[2] = FCN_V(tgMH_SUB)( pvS0, pvS2 );
}


/* ---- FCN_VO(tgGM_ET_Init_P) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Init_P)( VEC_OBJ_T(TgETRI,PCU) psET0, VEC_T(1,CPCU) pvS0, VEC_T(1,CPCU) pvS1, VEC_T(1,CPCU) pvS2 )
{
    FCN_VO(tgGM_PT_Init_P)( &psET0->m_sPT, pvS0, pvS1, pvS2 );
    psET0->m_avEdge[0] = FCN_V(tgMH_SUB)( pvS1, pvS0 );
    psET0->m_avEdge[1] = FCN_V(tgMH_SUB)( pvS2, pvS1 );
    psET0->m_avEdge[2] = FCN_V(tgMH_SUB)( pvS0, pvS2 );
    FCN_VO(tgGM_ET_Calc_Normal)( psET0 );
}


/* ---- FCN_VO(tgGM_ET_Init_EN) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Init_EN)(  VEC_OBJ_T(TgETRI,PCU) psET0, VEC_T(1,CPCU) pvS0, VEC_T(1,CPCU) pvE0, VEC_T(1,CPCU) pvE1, VEC_T(1,CPCU) pvN )
{
    VEC_T(1,C)                          vX1 = FCN_V(tgMH_ADD)( pvS0, pvE0 );
    VEC_T(1,C)                          vX2 = FCN_V(tgMH_ADD)( pvS0, pvE1 );

    FCN_VO(tgGM_PT_Init_PN)( &psET0->m_sPT, pvS0, &vX1, &vX2, pvN );
    psET0->m_avEdge[0] = *pvE0;
    psET0->m_avEdge[1] = FCN_V(tgMH_SUB)( pvE1, pvE0 );
    psET0->m_avEdge[2] = FCN_V(tgMH_NEG)( pvE1 );
}


/* ---- FCN_VO(tgGM_ET_Init_E) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Init_E)( VEC_OBJ_T(TgETRI,PCU) psET0, VEC_T(1,CPCU) pvS0, VEC_T(1,CPCU) pvE0, VEC_T(1,CPCU) pvE1 )
{
    VEC_T(1,C)                          vX1 = FCN_V(tgMH_ADD)( pvS0, pvE0 );
    VEC_T(1,C)                          vX2 = FCN_V(tgMH_ADD)( pvS0, pvE1 );

    FCN_VO(tgGM_PT_Init_P)( &psET0->m_sPT, pvS0, &vX1, &vX2 );
    psET0->m_avEdge[0] = *pvE0;
    psET0->m_avEdge[1] = FCN_V(tgMH_SUB)( pvE1, pvE0 );
    psET0->m_avEdge[2] = FCN_V(tgMH_NEG)( pvE1 );
}


/* ---- FCN_VO(tgGM_ET_Init_PT) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Init_PT)( VEC_OBJ_T(TgETRI,PCU) psET0, VEC_OBJ_T(TgPTRI,CPCU) psPT1 )
{
    FCN_VO(tgGM_ET_Init_PN)( psET0, psPT1->m_avPoint + 0, psPT1->m_avPoint + 1, psPT1->m_avPoint + 2, &psPT1->m_vNormal );
}


/* ---- FCN_VO(tgGM_ET_Copy) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Copy)( VEC_OBJ_T(TgETRI,PCU) psET0, VEC_OBJ_T(TgETRI,CPCU) psET1 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_ET_Is_Valid)(psET1));

    FCN_VO(tgGM_PT_Copy)( &psET0->m_sPT, &psET1->m_sPT );
    psET0->m_avEdge[0] = psET1->m_avEdge[0];
    psET0->m_avEdge[1] = psET1->m_avEdge[1];
    psET0->m_avEdge[2] = psET1->m_avEdge[2];
}


/* ---- FCN_VO(tgGM_ET_Set_Origin) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Set_Origin)( VEC_OBJ_T(TgETRI,PCU) psET0, VEC_T(1,CPCU) pvS0 )
{
    FCN_VO(tgGM_PT_Set_Origin)( &psET0->m_sPT, pvS0 );
    psET0->m_avEdge[0] = FCN_V(tgMH_SUB)( psET0->m_sPT.m_avPoint + 1, pvS0 );
    psET0->m_avEdge[2] = FCN_V(tgMH_SUB)( pvS0, psET0->m_sPT.m_avPoint + 2 );
}


/* ---- FCN_VO(tgGM_ET_Set_Point_0) ---------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Set_Point_0)( VEC_OBJ_T(TgETRI,PCU) psET0, VEC_T(1,CPCU) pvS0 )
{
    FCN_VO(tgGM_PT_Set_Point_0)( &psET0->m_sPT, pvS0 );
    psET0->m_avEdge[0] = FCN_V(tgMH_SUB)( psET0->m_sPT.m_avPoint + 1, pvS0 );
    psET0->m_avEdge[2] = FCN_V(tgMH_SUB)( pvS0, psET0->m_sPT.m_avPoint + 2 );
}


/* ---- FCN_VO(tgGM_ET_Set_Point_1) ---------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Set_Point_1)( VEC_OBJ_T(TgETRI,PCU) psET0, VEC_T(1,CPCU) pvS1 )
{
    FCN_VO(tgGM_PT_Set_Point_1)( &psET0->m_sPT, pvS1 );
    psET0->m_avEdge[0] = FCN_V(tgMH_SUB)( pvS1, psET0->m_sPT.m_avPoint + 0 );
    psET0->m_avEdge[1] = FCN_V(tgMH_SUB)( psET0->m_sPT.m_avPoint + 2, pvS1 );
}


/* ---- FCN_VO(tgGM_ET_Set_Point_2) ---------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Set_Point_2)( VEC_OBJ_T(TgETRI,PCU) psET0, VEC_T(1,CPCU) pvS2 )
{
    FCN_VO(tgGM_PT_Set_Point_2)( &psET0->m_sPT, pvS2 );
    psET0->m_avEdge[1] = FCN_V(tgMH_SUB)( pvS2, psET0->m_sPT.m_avPoint + 1 );
    psET0->m_avEdge[2] = FCN_V(tgMH_SUB)( psET0->m_sPT.m_avPoint + 0, pvS2 );
}


/* ---- FCN_VO(tgGM_ET_Set_Edge_0) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Set_Edge_0)( VEC_OBJ_T(TgETRI,PCU) psET0, VEC_T(1,CPCU) pvE0 )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Vector_Valid)(pvE0));

    psET0->m_sPT.m_avPoint[1] = FCN_V(tgMH_ADD)( psET0->m_sPT.m_avPoint + 0, pvE0 );
    psET0->m_avEdge[0] = *pvE0;
    psET0->m_avEdge[1] = FCN_V(tgMH_SUB)( psET0->m_sPT.m_avPoint + 2, psET0->m_sPT.m_avPoint + 1 );
    FCN_VO(tgGM_ET_Calc_Normal)( psET0 );
}


/* ---- FCN_VO(tgGM_ET_Set_Edge_1) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Set_Edge_1)( VEC_OBJ_T(TgETRI,PCU) psET0, VEC_T(1,CPCU) pvE1 )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Vector_Valid)(pvE1));

    psET0->m_sPT.m_avPoint[2] = FCN_V(tgMH_ADD)( psET0->m_sPT.m_avPoint + 1, pvE1 );
    psET0->m_avEdge[1] = *pvE1;
    psET0->m_avEdge[2] = FCN_V(tgMH_SUB)( psET0->m_sPT.m_avPoint + 0, psET0->m_sPT.m_avPoint + 2 );
    FCN_VO(tgGM_ET_Calc_Normal)( psET0 );
}


/* ---- FCN_VO(tgGM_ET_Set_Edge_2) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_ET_Set_Edge_2)( VEC_OBJ_T(TgETRI,PCU) psET0, VEC_T(1,CPCU) pvE2 )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Vector_Valid)(pvE2));

    psET0->m_sPT.m_avPoint[0] = FCN_V(tgMH_ADD)( psET0->m_sPT.m_avPoint + 2, pvE2 );
    psET0->m_avEdge[0] = FCN_V(tgMH_SUB)( psET0->m_sPT.m_avPoint + 1, psET0->m_sPT.m_avPoint + 0 );
    psET0->m_avEdge[2] = *pvE2;
    FCN_VO(tgGM_ET_Calc_Normal)( psET0 );
}


/* ---- FCN_VO(tgGM_ET_Query_Origin) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1,CP) FCN_VO(tgGM_ET_Query_Origin)( VEC_OBJ_T(TgETRI,CPCU) psET1 )
{
    return (psET1->m_sPT.m_avPoint + 0);
}


/* ---- FCN_VO(tgGM_ET_Query_Normal) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1,CP) FCN_VO(tgGM_ET_Query_Normal)( VEC_OBJ_T(TgETRI,CPCU) psET1 )
{
    return (&psET1->m_sPT.m_vNormal);
}


/* ---- FCN_VO(tgGM_ET_Query_Point_0) -------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1,CP) FCN_VO(tgGM_ET_Query_Point_0)( VEC_OBJ_T(TgETRI,CPCU) psET1 )
{
    return (psET1->m_sPT.m_avPoint + 0);
}


/* ---- FCN_VO(tgGM_ET_Query_Point_1) -------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1,CP) FCN_VO(tgGM_ET_Query_Point_1)( VEC_OBJ_T(TgETRI,CPCU) psET1 )
{
    return (psET1->m_sPT.m_avPoint + 1);
}


/* ---- FCN_VO(tgGM_ET_Query_Point_2) -------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1,CP) FCN_VO(tgGM_ET_Query_Point_2)( VEC_OBJ_T(TgETRI,CPCU) psET1 )
{
    return (psET1->m_sPT.m_avPoint + 2);
}


/* ---- FCN_VO(tgGM_ET_Query_Point) ---------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1,CP) FCN_VO(tgGM_ET_Query_Point)( VEC_OBJ_T(TgETRI,CPCU) psET1, TgRSIZE_C uiIndex )
{
    TgGEOM_ASSERT_PARAM(uiIndex <= 2);
    return (psET1->m_sPT.m_avPoint + uiIndex);
}


/* ---- FCN_VO(tgGM_ET_Query_Edge_0) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1,CP) FCN_VO(tgGM_ET_Query_Edge_0)( VEC_OBJ_T(TgETRI,CPCU) psET1 )
{
    return (psET1->m_avEdge + 0);
}


/* ---- FCN_VO(tgGM_ET_Query_Edge_1) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1,CP) FCN_VO(tgGM_ET_Query_Edge_1)( VEC_OBJ_T(TgETRI,CPCU) psET1 )
{
    return (psET1->m_avEdge + 1);
}


/* ---- FCN_VO(tgGM_ET_Query_Edge_2) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1,CP) FCN_VO(tgGM_ET_Query_Edge_2)( VEC_OBJ_T(TgETRI,CPCU) psET1 )
{
    return (psET1->m_avEdge + 2);
}


/* ---- FCN_VO(tgGM_ET_Query_Edge) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1,CP) FCN_VO(tgGM_ET_Query_Edge)( VEC_OBJ_T(TgETRI,CPCU) psET1, TgRSIZE_C uiIndex )
{
    TgGEOM_ASSERT_PARAM(uiIndex <= 2);
    return (psET1->m_avEdge + uiIndex);
}


/* ---- FCN_VO(tgGM_PT_ET_Query) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_OBJ_T(TgPTRI,CP) FCN_VO(tgGM_ET_Query_PT)( VEC_OBJ_T(TgETRI,CPCU) psET1 )
{
    return (&psET1->m_sPT);
}
