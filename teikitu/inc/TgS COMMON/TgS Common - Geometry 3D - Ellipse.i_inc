/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common - Geometry 3D - Ellipse.i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.17 / »GUID« 3ED3C595-046B-47FB-8785-5C167178CD24 */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Common ===================================================================================================================================================================== */

/* ---- FCN_VO(tgGM_EL_Reset) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_EL_Reset)( VEC_OBJ_T(TgELLIPSE,PCU) psEL0 )
{
    FCN_V(tgMH_CLI,3)( &psEL0->m_mReference_Frame );
    psEL0->m_fMajor = TYPE_K(0);
    psEL0->m_fMinor = TYPE_K(0);
}


/* ---- FCN_VO(tgGM_EL_Area) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_EL_Area)( VEC_OBJ_T(TgELLIPSE,CPCU) psEL0 )
{
    return (VAR_K(KTgPI) * psEL0->m_fMajor * psEL0->m_fMinor);
}


/* ---- FCN_VO(tgGM_EL_BA) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_EL_BA)( VEC_OBJ_T(TgBOXAA,PCU) psBA0, VEC_OBJ_T(TgELLIPSE,CPCU) psEL0 )
{
    VEC_T(1)                            vA0, vA1, vA2, vC0;

    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_EL_Is_Valid)( psEL0 ));

    FCN_V(tgMH_Query_Reference_Frame,3)( &vA0, &vA1, &vA2, &vC0, &psEL0->m_mReference_Frame );

    VEC_T(1,C)      vR0 = FCN_V(tgMH_MUL)( FCN_V(tgMH_SET1)( psEL0->m_fMajor ), vA0 );
    VEC_T(1,C)      vR1 = FCN_V(tgMH_MUL)( FCN_V(tgMH_SET1)( psEL0->m_fMinor ), vA2 );

    VEC_T(1,C)      vV0 = FCN_V(tgMH_SUB)( vC0, vR0 );
    VEC_T(1,C)      vV1 = FCN_V(tgMH_ADD)( vC0, vR0 );
    VEC_T(1,C)      vV2 = FCN_V(tgMH_SUB)( vC0, vR1 );
    VEC_T(1,C)      vV3 = FCN_V(tgMH_ADD)( vC0, vR1 );

    FCN_VO(tgGM_BA_Init_PT)( psBA0, vC0 );
    FCN_VO(tgGM_BA_Union_PT)( psBA0, vV0 );
    FCN_VO(tgGM_BA_Union_PT)( psBA0, vV1 );
    FCN_VO(tgGM_BA_Union_PT)( psBA0, vV2 );
    FCN_VO(tgGM_BA_Union_PT)( psBA0, vV3 );
}


/* ---- FCN_VO(tgGM_EL_Sweep_BA) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_EL_Sweep_BA)( VEC_OBJ_T(TgBOXAA,PCU) psBA0, VEC_OBJ_T(TgELLIPSE,CPCU) psEL1, VEC_T(1,C) vDT )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Vector)( vDT ));

    FCN_VO(tgGM_EL_BA)( psBA0, psEL1 );
    FCN_VO(tgGM_BA_Sweep)( psBA0, vDT );
}


/* ---- FCN_VO(tgGM_EL_Project) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_EL_Project)( VEC_T(1,PCU) pvMin, VEC_T(1,PCU) pvMax, VEC_OBJ_T(TgELLIPSE,CPCU) psEL0, VEC_T(1,C) vDN )
{
    VEC_T(1)                            vA0, vA1, vA2, vC0;

    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_EL_Is_Valid)( psEL0 ));

    FCN_V(tgMH_Query_Reference_Frame,3)( &vA0, &vA1, &vA2, &vC0, &psEL0->m_mReference_Frame );

    VEC_T(1,C)      vDN_A0 = FCN_V(tgMH_ABS)( FCN_V(tgMH_DOT)( vDN, vA0 ) );
    VEC_T(1,C)      vDN_A2 = FCN_V(tgMH_ABS)( FCN_V(tgMH_DOT)( vDN, vA2 ) );

    VEC_T(1,C)      vV0 = FCN_V(tgMH_MUL)( FCN_V(tgMH_SET1)( psEL0->m_fMajor ), vDN_A0 );
    VEC_T(1,C)      vV1 = FCN_V(tgMH_MUL)( FCN_V(tgMH_SET1)( psEL0->m_fMinor ), vDN_A2 );
    VEC_T(1,C)      vV2 = FCN_V(tgMH_DOT)( vDN, vC0 );
    VEC_T(1,C)      vV3 = FCN_V(tgMH_ADD)( vV0, vV1 );

    *pvMin = FCN_V(tgMH_SUB)( vV2, vV3 );
    *pvMax = FCN_V(tgMH_ADD)( vV2, vV3 );
}


/* ---- FCN_VO(tgGM_EL_Is_Contained) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgGM_EL_Is_Contained)( VEC_OBJ_T(TgELLIPSE,CPCU) psEL0, VEC_T(1,C) vS0 )
{
    VEC_T(1)                            vA0, vA1, vA2, vC0;
    VEC_UN_T(1)                         uDS, uDS_A0, uDS_A1, uDS_A2;

    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_EL_Is_Valid)( psEL0 ) && FCN_V(tgMH_Is_Valid_Point)( vS0 ));

    if (psEL0->m_fMajor <= VAR_K(KTgEPS) || psEL0->m_fMinor <= VAR_K(KTgEPS))
    {
        return (false);
    };

    FCN_V(tgMH_Query_Reference_Frame,3)( &vA0, &vA1, &vA2, &vC0, &psEL0->m_mReference_Frame );

    VEC_UN_1_MEMBER(uDS) = FCN_V(tgMH_SUB)( vS0, vC0 );
    VEC_UN_1_MEMBER(uDS_A1) = FCN_V(tgMH_DOT)( VEC_UN_1_MEMBER(uDS), vA1 );

    if (!FCN_F(tgCM_NR0)( VEC_S_UN_1_MEMBER(uDS_A1).x ))
    {
        return (false);
    }

    VEC_UN_1_MEMBER(uDS_A0) = FCN_V(tgMH_DOT)( VEC_UN_1_MEMBER(uDS), vA0 );
    if (VEC_S_UN_1_MEMBER(uDS_A0).x > psEL0->m_fMajor)
    {
        return (false);
    };

    VEC_UN_1_MEMBER(uDS_A2) = FCN_V(tgMH_DOT)( VEC_UN_1_MEMBER(uDS), vA2 );
    if (VEC_S_UN_1_MEMBER(uDS_A2).x > psEL0->m_fMinor)
    {
        return (false);
    };

    return (true);
}


/* ---- FCN_VO(tgGM_EL_TX) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_EL_TX)( VEC_OBJ_T(TgELLIPSE,PCU) psEL0, VEC_T(3,CPCU) pmM0 )
{
    TgGEOM_ASSERT_PARAM(!FCN_V(tgMH_NAN,3)( pmM0 ));

    FCN_V(tgMH_CAT,3)( &psEL0->m_mReference_Frame, &psEL0->m_mReference_Frame, pmM0 );
}


/* ---- FCN_VO(tgGM_EL_Copy_TX) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_EL_Copy_TX)( VEC_OBJ_T(TgELLIPSE,PCU) psEL0, VEC_OBJ_T(TgELLIPSE,CPCU) psEL1, VEC_T(3,CPCU) pmM0 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_EL_Is_Valid)( psEL1 ) && !FCN_V(tgMH_NAN,3)( pmM0 ));

    FCN_V(tgMH_CAT,3)( &psEL0->m_mReference_Frame, &psEL1->m_mReference_Frame, pmM0 );
    psEL0->m_fMajor = psEL1->m_fMajor;
    psEL0->m_fMinor = psEL1->m_fMinor;
}


/* ---- FCN_VO(tgGM_EL_Init) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_EL_Init)( VEC_OBJ_T(TgELLIPSE,PCU) psEL0, VEC_T(3,CPCU) pmM0, VAR_T(C) fMaj, VAR_T(C) fMin )
{
    FCN_VO(tgGM_EL_Set_Reference_Frame)( psEL0, pmM0 );
    FCN_VO(tgGM_EL_Set_Major_Radius)( psEL0, fMaj );
    FCN_VO(tgGM_EL_Set_Minor_Radius)( psEL0, fMin );
}


/* ---- FCN_VO(tgGM_EL_Copy) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_EL_Copy)( VEC_OBJ_T(TgELLIPSE,PCU) psEL0, VEC_OBJ_T(TgELLIPSE,CPCU) psEL1 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_EL_Is_Valid)( psEL1 ));

    psEL0->m_mReference_Frame = psEL1->m_mReference_Frame;
    psEL0->m_fMajor = psEL1->m_fMajor;
    psEL0->m_fMinor = psEL1->m_fMinor;
}


/* ---- FCN_VO(tgGM_EL_Set_Reference_Frame) -------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_EL_Set_Reference_Frame)( VEC_OBJ_T(TgELLIPSE,PCU) psEL0, VEC_T(3,CPCU) pmReference_Frame )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Reference_Frame,3)( pmReference_Frame ));

    psEL0->m_mReference_Frame = *pmReference_Frame;
}


/* ---- FCN_VO(tgGM_EL_Set_Origin) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_EL_Set_Origin)( VEC_OBJ_T(TgELLIPSE,PCU) psEL0, VEC_T(1,C) vS0 )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Point)( vS0 ));
    FCN_V(tgMH_Set_T,3)( &psEL0->m_mReference_Frame, vS0 );
}


/* ---- FCN_VO(tgGM_EL_Set_Major_Radius) ----------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_EL_Set_Major_Radius)( VEC_OBJ_T(TgELLIPSE,PCU) psEL0, VAR_T(C) fRadius )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)( fRadius ) && fRadius > TYPE_K(0));
    psEL0->m_fMajor = fRadius;
}


/* ---- FCN_VO(tgGM_EL_Set_Minor_Radius) ----------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_EL_Set_Minor_Radius)( VEC_OBJ_T(TgELLIPSE,PCU) psEL0, VAR_T(C) fRadius )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)( fRadius ) && fRadius > TYPE_K(0));
    psEL0->m_fMinor = fRadius;
}


/* ---- FCN_VO(tgGM_EL_Query_Origin) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_EL_Query_Origin)( VEC_OBJ_T(TgELLIPSE,CPCU) psEL0 )
{
    return (FCN_V(tgMH_Query_Axis_3,3)( &psEL0->m_mReference_Frame ));
}


/* ---- FCN_VO(tgGM_EL_Query_Major_Unit) ----------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_EL_Query_Major_Unit)( VEC_OBJ_T(TgELLIPSE,CPCU) psEL0 )
{
    return (FCN_V(tgMH_Query_Axis_0,3)( &psEL0->m_mReference_Frame ));
}


/* ---- FCN_VO(tgGM_EL_Query_Normal) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_EL_Query_Normal)( VEC_OBJ_T(TgELLIPSE,CPCU) psEL0 )
{
    return (FCN_V(tgMH_Query_Axis_1,3)( &psEL0->m_mReference_Frame ));
}


/* ---- FCN_VO(tgGM_EL_Query_Minor_Unit) ----------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_EL_Query_Minor_Unit)( VEC_OBJ_T(TgELLIPSE,CPCU) psEL0 )
{
    return (FCN_V(tgMH_Query_Axis_2,3)( &psEL0->m_mReference_Frame ));
}


/* ---- FCN_VO(tgGM_EL_Query_Major_Radius) --------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_EL_Query_Major_Radius)( VEC_OBJ_T(TgELLIPSE,CPCU) psEL0 )
{
    return (psEL0->m_fMajor);
}


/* ---- FCN_VO(tgGM_EL_Query_Minor_Radius) --------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_EL_Query_Minor_Radius)( VEC_OBJ_T(TgELLIPSE,CPCU) psEL0 )
{
    return (psEL0->m_fMinor);
}
