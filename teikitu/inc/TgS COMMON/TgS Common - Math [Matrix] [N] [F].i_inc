/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common - Math [Matrix] [N] [F].i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.16 / »GUID« 015482FC-A4BD-4E1C-AE49-A30E5728D73A */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Common ===================================================================================================================================================================== */

/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */
/*  Public Functions                                                                                                                                                               */
/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */

/* ---- FCN_M(tgMH_INIT_T_N) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_INIT_T_N)( MAT_N_T(PCU) pxM0, VEC_N_T(1,C) v0 )
{
    TgUN_PTR_V128                       uM0;
    TgUN_CONST_PTR_V128                 uV0;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    VAR_UN_1_MEMBER(uV0.m_p) = &v0;
    FCN_M(tgMH_INIT_T)( VAR_UN_M_MEMBER(uM0.m_p), VAR_UN_1_MEMBER(uV0.m_p) );
}


/* ---- FCN_M(tgMH_Init_Quat_N) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Init_Quat_N)( MAT_N_T(PCU) pxM0, VEC_N_T(1,C) qR0 )
{
    TgUN_PTR_V128                       uM0;
    TgUN_CONST_PTR_V128                 uV0;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    VAR_UN_1_MEMBER(uV0.m_p) = &qR0;
    FCN_M(tgMH_Init_Quat)( VAR_UN_M_MEMBER(uM0.m_p), VAR_UN_1_MEMBER(uV0.m_p) );
}


/* ---- FCN_M(tgMH_CLI_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_CLI_N)( MAT_N_T(PCU) pxM0 )
{
    TgUN_PTR_V128                       uM0;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    FCN_M(tgMH_CLI)( VAR_UN_M_MEMBER(uM0.m_p) );
}


/* ---- FCN_M(tgMH_SET_T_N) ------------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_SET_T_N)( MAT_N_T(PCU) pxM0, VEC_N_T(1,C) v0 )
{
    TgUN_PTR_V128                       uM0;
    TgUN_CONST_PTR_V128                 uV0;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    VAR_UN_1_MEMBER(uV0.m_p) = &v0;
    FCN_M(tgMH_SET_T)( VAR_UN_M_MEMBER(uM0.m_p), VAR_UN_1_MEMBER(uV0.m_p) );
}


/* ---- FCN_M(tgMH_Set_Quat_N) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_Set_Quat_N)( MAT_N_T(PCU) pxM0, VEC_N_T(1,C) qR0 )
{
    TgUN_PTR_V128                       uM0;
    TgUN_CONST_PTR_V128                 uV0;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    VAR_UN_1_MEMBER(uV0.m_p) = &qR0;
    FCN_M(tgMH_Set_Quat)( VAR_UN_M_MEMBER(uM0.m_p), VAR_UN_1_MEMBER(uV0.m_p) );
}


/* ---- FCN_M(tgMH_ADD_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_ADD_N)( MAT_N_T(PCU) pxRet, MAT_N_T(CPCU) pxM0, MAT_N_T(CPCU) pxM1 )
{
    #define EQN(A)                      FCN_V(tgMH_ADD_N)( pxM0->m_avRow[A], pxM1->m_avRow[A] )

    GENERATE__MAT_ASSIGN
    #undef EQN
}


/* ---- FCN_M(tgMH_MUL_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_MUL_N)( MAT_N_T(PCU) pxRet, MAT_N_T(CPCU) pxM0, MAT_N_T(CPCU) pxM1 )
{
    #define EQN(A)                      FCN_V(tgMH_MUL_N)( pxM0->m_avRow[A], pxM1->m_avRow[A] )

    GENERATE__MAT_ASSIGN
    #undef EQN
}


/* ---- FCN_M(tgMH_MUL_SM_N) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_MUL_SM_N)( MAT_N_T(PCU) pxRet, VEC_N_T(1,C) vS, MAT_N_T(CPCU) pxM1 )
{
    #define EQN(A)                      FCN_V(tgMH_MUL_N)( vS, pxM1->m_avRow[A] )

    GENERATE__MAT_ASSIGN
    #undef EQN
}


/* ---- FCN_M(tgMH_MUL_MS_N) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_MUL_MS_N)( MAT_N_T(PCU) pxRet, MAT_N_T(CPCU) pxM0, VEC_N_T(1,C) vS )
{
    #define EQN(A)                      FCN_V(tgMH_MUL_N)( pxM0->m_avRow[A], vS )

    GENERATE__MAT_ASSIGN
    #undef EQN
}


/* ---- FCN_M(tgMH_DIV_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_DIV_N)( MAT_N_T(PCU) pxRet, MAT_N_T(CPCU) pxM0, MAT_N_T(CPCU) pxM1 )
{
    #define EQN(A)                      FCN_V(tgMH_DIV_N)( pxM0->m_avRow[A], pxM1->m_avRow[A] )

    GENERATE__MAT_ASSIGN
    #undef EQN
}


/* ---- FCN_M(tgMH_DIV_SM_N) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_DIV_SM_N)( MAT_N_T(PCU) pxRet, VEC_N_T(1,C) vS, MAT_N_T(CPCU) pxM1 )
{
    #define EQN(A)                      FCN_V(tgMH_DIV_N)( vS, pxM1->m_avRow[A] )

    GENERATE__MAT_ASSIGN
    #undef EQN
}


/* ---- FCN_M(tgMH_DIV_MS_N) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_DIV_MS_N)( MAT_N_T(PCU) pxRet, MAT_N_T(CPCU) pxM0, VEC_N_T(1,C) vS )
{
    #define EQN(A)                      FCN_V(tgMH_DIV_N)( pxM0->m_avRow[A], vS )

    GENERATE__MAT_ASSIGN
    #undef EQN
}


/* ---- FCN_M(tgMH_SUB_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_SUB_N)( MAT_N_T(PCU) pxRet, MAT_N_T(CPCU) pxM0, MAT_N_T(CPCU) pxM1 )
{
    #define EQN(A)                      FCN_V(tgMH_SUB_N)( pxM0->m_avRow[A], pxM1->m_avRow[A] )

    GENERATE__MAT_ASSIGN
    #undef EQN
}


/* ---- FCN_M(tgMH_NEG_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_NEG_N)( MAT_N_T(PCU) pxRet, MAT_N_T(CPCU) pxM0 )
{
    #define EQN(A)                      FCN_V(tgMH_NEG_N)( pxM0->m_avRow[A] )

    GENERATE__MAT_ASSIGN
    #undef EQN
}


/* ---- FCN_M(tgMH_CAT_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_CAT_N)( MAT_N_T(PCU) pxM0, MAT_N_T(CPCU) pxM1, MAT_N_T(CPCU) pxM2 )
{
    TgUN_PTR_V128                       uM0;
    TgUN_CONST_PTR_V128                 uM1, uM2;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    VAR_UN_M_MEMBER(uM1.m_p) = pxM1;
    VAR_UN_M_MEMBER(uM2.m_p) = pxM2;
    FCN_M(tgMH_CAT)( VAR_UN_M_MEMBER(uM0.m_p), VAR_UN_M_MEMBER(uM1.m_p), VAR_UN_M_MEMBER(uM2.m_p) );
}


/* ---- FCN_M(tgMH_INV_DET_N) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_INV_DET_N)( MAT_N_T(PCU) pxM0, VEC_N_T(1,C) v0, MAT_N_T(CPCU) pxM1 )
{
    TgUN_PTR_V128                       uM0;
    TgUN_CONST_PTR_V128                 uV0, uM1;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    VAR_UN_1_MEMBER(uV0.m_p) = &v0;
    VAR_UN_M_MEMBER(uM1.m_p) = pxM1;
    FCN_M(tgMH_INV_DET)( VAR_UN_M_MEMBER(uM0.m_p), VAR_UN_1_MEMBER(uV0.m_p)->m_aData[0], VAR_UN_M_MEMBER(uM1.m_p) );
}


/* ---- FCN_M(tgMH_INV_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_M(tgMH_INV_N)( MAT_N_T(PCU) pxM0, MAT_N_T(CPCU) pxM1 )
{
    TgUN_PTR_V128                       uM0;
    TgUN_CONST_PTR_V128                 uM1;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    VAR_UN_M_MEMBER(uM1.m_p) = pxM1;
    FCN_M(tgMH_INV)( VAR_UN_M_MEMBER(uM0.m_p), VAR_UN_M_MEMBER(uM1.m_p) );
}


/* ---- FCN_M(tgMH_DET_N) -------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_M(tgMH_DET_N)( MAT_N_T(CPCU) pxM0 )
{
    TgUN_CONST_PTR_V128                 uM0;
    VAR_T()                             fDet;
    TgUN_V128                           uResult;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    fDet = FCN_M(tgMH_DET)( VAR_UN_M_MEMBER(uM0.m_p) );
    VAR_UN_1_MEMBER(uResult.m_) = FCN_V(tgMH_SET1_S)( fDet );

    return (VAR_UN_1_MEMBER(uResult.m_));
}


/* ---- FCN_M(tgMH_TX_N) --------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_M(tgMH_TX_N)( MAT_N_T(CPCU) pxM0, VEC_N_T(1,C) v0 )
{
    TgUN_CONST_PTR_V128                 uM0, uV0;
    TgUN_V128                           uResult;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    VAR_UN_1_MEMBER(uV0.m_p) = &v0;
    VAR_UN_1_MEMBER(uResult.m_) = FCN_M(tgMH_TX)( VAR_UN_M_MEMBER(uM0.m_p), VAR_UN_1_MEMBER(uV0.m_p) );
    return (VAR_UN_1_MEMBER(uResult.m_));
}


/* ---- FCN_M(tgMH_TX_P_N) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_M(tgMH_TX_P_N)( MAT_N_T(CPCU) pxM0, VEC_N_T(1,C) v0 )
{
    TgUN_CONST_PTR_V128                 uM0, uV0;
    TgUN_V128                           uResult;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    VAR_UN_1_MEMBER(uV0.m_p) = &v0;
    VAR_UN_1_MEMBER(uResult.m_) = FCN_M(tgMH_TX_P)( VAR_UN_M_MEMBER(uM0.m_p), VAR_UN_1_MEMBER(uV0.m_p) );
    return (VAR_UN_1_MEMBER(uResult.m_));
}


/* ---- FCN_M(tgMH_TX_V_N) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_M(tgMH_TX_V_N)( MAT_N_T(CPCU) pxM0, VEC_N_T(1,C) v0 )
{
    TgUN_CONST_PTR_V128                 uM0, uV0;
    TgUN_V128                           uResult;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    VAR_UN_1_MEMBER(uV0.m_p) = &v0;
    VAR_UN_1_MEMBER(uResult.m_) = FCN_M(tgMH_TX_V)( VAR_UN_M_MEMBER(uM0.m_p), VAR_UN_1_MEMBER(uV0.m_p) );
    return (VAR_UN_1_MEMBER(uResult.m_));
}


/* ---- FCN_M(tgMH_Get_Col_0_N) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_M(tgMH_Get_Col_0_N)( MAT_N_T(CPCU) pxM0 )
{
    TgUN_CONST_PTR_V128                 uM0;
    TgUN_V128                           uResult;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    VAR_UN_1_MEMBER(uResult.m_) = FCN_M(tgMH_Get_Col_0)( VAR_UN_M_MEMBER(uM0.m_p) );
    return (VAR_UN_1_MEMBER(uResult.m_));
}


/* ---- FCN_V(tgMH_Get_Col_1_N) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_M(tgMH_Get_Col_1_N)( MAT_N_T(CPCU) pxM0 )
{
    TgUN_CONST_PTR_V128                 uM0;
    TgUN_V128                           uResult;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    VAR_UN_1_MEMBER(uResult.m_) = FCN_M(tgMH_Get_Col_1)( VAR_UN_M_MEMBER(uM0.m_p) );
    return (VAR_UN_1_MEMBER(uResult.m_));
}


/* ---- FCN_V(tgMH_Get_Col_2_N) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_M(tgMH_Get_Col_2_N)( MAT_N_T(CPCU) pxM0 )
{
    TgUN_CONST_PTR_V128                 uM0;
    TgUN_V128                           uResult;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    VAR_UN_1_MEMBER(uResult.m_) = FCN_M(tgMH_Get_Col_2)( VAR_UN_M_MEMBER(uM0.m_p) );
    return (VAR_UN_1_MEMBER(uResult.m_));
}


/* ---- FCN_V(tgMH_Get_Col_3_N) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_M(tgMH_Get_Col_3_N)( MAT_N_T(CPCU) pxM0 )
{
    TgUN_CONST_PTR_V128                 uM0;
    TgUN_V128                           uResult;

    VAR_UN_M_MEMBER(uM0.m_p) = pxM0;
    VAR_UN_1_MEMBER(uResult.m_) = FCN_M(tgMH_Get_Col_3)( VAR_UN_M_MEMBER(uM0.m_p) );
    return (VAR_UN_1_MEMBER(uResult.m_));
}
