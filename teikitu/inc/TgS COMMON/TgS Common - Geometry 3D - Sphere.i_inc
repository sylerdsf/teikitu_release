/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common - Geometry 3D - Sphere.i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.17 / »GUID« 3ED3C595-046B-47FB-8785-5C167178CD24 */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Common ===================================================================================================================================================================== */

/* ---- FCN_VO(tgGM_SP_Reset) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_SP_Reset)( VEC_OBJ_T(TgSPHERE,PCU) psSP0 )
{
    psSP0->m_vOrigin = FCN_V(tgMH_Init_Point)( FCN_V(tgMH_SET1)( TYPE_K(0) ) );
    VEC_UN_1_MEMBER(psSP0->m_uRadius) = FCN_V(tgMH_SET1)( TYPE_K(0) );
    VEC_UN_1_MEMBER(psSP0->m_uRadiusSq) = FCN_V(tgMH_SET1)( TYPE_K(0) );
}


/* ---- FCN_VO(tgGM_SP_Is_Valid) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgGM_SP_Is_Valid)( VEC_OBJ_T(TgSPHERE,CPCU) psSP0 )
{
    if (!FCN_V(tgMH_Is_Valid_Point)( psSP0->m_vOrigin ))
    {
        return (false);
    };

    if (!FCN_V(tgMH_Is_Valid)( VEC_UN_1_MEMBER(psSP0->m_uRadius) ) || !FCN_V(tgMH_Is_Valid)( VEC_UN_1_MEMBER(psSP0->m_uRadiusSq) ))
    {
        return (false);
    };

    if (FCN_V(tgMH_PRX_CMP_EQ)( VEC_UN_1_MEMBER(psSP0->m_uRadius), FCN_V(tgMH_SET1)( TYPE_K(0) ) ))
    {
        return (false);
    };

    if (!FCN_V(tgMH_PRX_CMP_EQ)( VEC_UN_1_MEMBER(psSP0->m_uRadiusSq), FCN_V(tgMH_MUL)( VEC_UN_1_MEMBER(psSP0->m_uRadius), VEC_UN_1_MEMBER(psSP0->m_uRadius) ) ))
    {
        return (false);
    };

    return (true);
}


/* ---- FCN_VO(tgGM_SP_Support_Point) -------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_SP_Support_Point)( VEC_OBJ_T(TgSPHERE,CPCU) psSP0, VEC_T(1,C) vDN )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_SP_Is_Valid)( psSP0 ) && FCN_V(tgMH_Is_Valid_Unit_Vector)( vDN ));

    return (FCN_V(tgMH_MAD)( VEC_UN_1_MEMBER(psSP0->m_uRadius), vDN, psSP0->m_vOrigin) );
}


/* ---- FCN_VO(tgGM_SP_Volume) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_SP_Volume)( VEC_OBJ_T(TgSPHERE,CPCU) psSP0 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_SP_Is_Valid)( psSP0 ));
    return (TYPE_K(2,0)*VAR_K(KTgTWO_PI)*VEC_S_UN_1_MEMBER(psSP0->m_uRadius).x*VEC_S_UN_1_MEMBER(psSP0->m_uRadius).x*VEC_S_UN_1_MEMBER(psSP0->m_uRadius).x / TYPE_K(3,0));
}


/* ---- FCN_VO(tgGM_SP_Area) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_SP_Area)( VEC_OBJ_T(TgSPHERE,CPCU) psSP0 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_SP_Is_Valid)( psSP0 ));
    return (TYPE_K(2,0)*VAR_K(KTgTWO_PI)*VEC_S_UN_1_MEMBER(psSP0->m_uRadiusSq).x);
}


/* ---- FCN_VO(tgGM_SP_BA) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_SP_BA)( VEC_OBJ_T(TgBOXAA,PCU) psBA0, VEC_OBJ_T(TgSPHERE,CPCU) psSP0 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_SP_Is_Valid)( psSP0 ));

    FCN_VO(tgGM_BA_Init_SP)( psBA0, psSP0->m_vOrigin, VEC_S_UN_1_MEMBER(psSP0->m_uRadius).x );
}


/* ---- FCN_VO(tgGM_SP_Sweep_BA) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_SP_Sweep_BA)( VEC_OBJ_T(TgBOXAA,PCU) psBA0, VEC_OBJ_T(TgSPHERE,CPCU) psSP1, VEC_T(1,C) vDT )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Vector)( vDT ));

    FCN_VO(tgGM_SP_BA)( psBA0, psSP1 );
    FCN_VO(tgGM_BA_Sweep)( psBA0, vDT );
}


/* ---- FCN_VO(tgGM_SP_Project) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_SP_Project)( VEC_T(1,PCU) pvMin, VEC_T(1,PCU) pvMax, VEC_OBJ_T(TgSPHERE,CPCU) psSP0, VEC_T(1,C) vDN )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_SP_Is_Valid)( psSP0 ) && FCN_V(tgMH_Is_Valid_Unit_Vector)( vDN ));

    VEC_T(1,C)      vC0_DN = FCN_V(tgMH_DOT)( psSP0->m_vOrigin, vDN );

    *pvMin = FCN_V(tgMH_SUB)( vC0_DN, VEC_UN_1_MEMBER(psSP0->m_uRadius) );
    *pvMax = FCN_V(tgMH_ADD)( vC0_DN, VEC_UN_1_MEMBER(psSP0->m_uRadius) );
}


/* ---- FCN_VO(tgGM_SP_Is_Contained) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgGM_SP_Is_Contained)( VEC_OBJ_T(TgSPHERE,CPCU) psSP0, VEC_T(1,C) vS0 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_SP_Is_Valid)( psSP0 ));
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Point)( vS0 ));

    VEC_T(1,C)      vX0 = FCN_V(tgMH_SUB)( vS0, psSP0->m_vOrigin );
    VEC_T(1,C)      vX1 = FCN_V(tgMH_LSQ)( vX0 );
    VEC_T(1,C)      vX2 = FCN_V(tgMH_CMP_LE)( vX1, VEC_UN_1_MEMBER(psSP0->m_uRadiusSq) );
    
    return (FCN_V(tgMH_CMP_ALL_TO_BOOL)( vX2 ));
}


/* ---- FCN_VO(tgGM_SP_TX) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_SP_TX)( VEC_OBJ_T(TgSPHERE,PCU) psSP0, VEC_T(3,CPCU) pmM0 )
{
    TgGEOM_ASSERT_PARAM(!FCN_V(tgMH_NAN,3)( pmM0 ));

    psSP0->m_vOrigin = FCN_V(tgMH_TX_P,3)( psSP0->m_vOrigin, pmM0 );
}


/* ---- FCN_VO(tgGM_SP_Copy_TX) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_SP_Copy_TX)( VEC_OBJ_T(TgSPHERE,PCU) psSP0, VEC_OBJ_T(TgSPHERE,CPCU) psSP1, VEC_T(3,CPCU) pmM0 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_SP_Is_Valid)( psSP1 ) && !FCN_V(tgMH_NAN,3)( pmM0 ));

    psSP0->m_vOrigin = FCN_V(tgMH_TX_P,3)( psSP1->m_vOrigin, pmM0 );
    psSP0->m_uRadius = psSP1->m_uRadius;
    psSP0->m_uRadiusSq = psSP1->m_uRadiusSq;
}


/* ---- FCN_VO(tgGM_SP_Init) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_SP_Init)( VEC_OBJ_T(TgSPHERE,PCU) psSP0, VEC_T(1,C) vS0, VAR_T(C) fRad )
{
    FCN_VO(tgGM_SP_Set_Origin)( psSP0, vS0 );
    FCN_VO(tgGM_SP_Set_Radius)( psSP0, fRad );
}


/* ---- FCN_VO(tgGM_SP_Copy) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_SP_Copy)( VEC_OBJ_T(TgSPHERE,PCU) psSP0, VEC_OBJ_T(TgSPHERE,CPCU) psSP1 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_SP_Is_Valid)( psSP1 ));

    psSP0->m_vOrigin = psSP1->m_vOrigin;
    psSP0->m_uRadius = psSP1->m_uRadius;
    psSP0->m_uRadiusSq = psSP1->m_uRadiusSq;
}


/* ---- FCN_VO(tgGM_SP_Set_Origin) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_SP_Set_Origin)( VEC_OBJ_T(TgSPHERE,PCU) psSP0, VEC_T(1,C) vS0 )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Valid_Point)( vS0 ));

    psSP0->m_vOrigin = vS0;
}


/* ---- FCN_VO(tgGM_SP_Set_Radius) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_SP_Set_Radius)( VEC_OBJ_T(TgSPHERE,PCU) psSP0, VAR_T(C) fRad )
{
    TgGEOM_ASSERT_PARAM(fRad > TYPE_K(0));

    VEC_UN_1_MEMBER(psSP0->m_uRadius) = FCN_V(tgMH_Init_Vector_ELEM)( fRad, fRad, fRad );
    VEC_UN_1_MEMBER(psSP0->m_uRadiusSq) = FCN_V(tgMH_MUL)( VEC_UN_1_MEMBER(psSP0->m_uRadius), VEC_UN_1_MEMBER(psSP0->m_uRadius) );
}


/* ---- FCN_VO(tgGM_SP_Query_Origin) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_SP_Query_Origin)( VEC_OBJ_T(TgSPHERE,CPCU) psSP1 )
{
    return (psSP1->m_vOrigin);
}

/* ---- FCN_VO(tgGM_SP_Query_Radius) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_SP_Query_Radius)( VEC_OBJ_T(TgSPHERE,CPCU) psSP0 )
{
    return (VEC_UN_1_MEMBER(psSP0->m_uRadius));
}


/* ---- FCN_VO(tgGM_SP_Query_Radius_Sq) ------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_SP_Query_Radius_Sq)( VEC_OBJ_T(TgSPHERE,CPCU) psSP0 )
{
    return (VEC_UN_1_MEMBER(psSP0->m_uRadiusSq));
}
