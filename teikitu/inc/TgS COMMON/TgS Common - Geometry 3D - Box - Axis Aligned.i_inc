/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common - Geometry 3D - Box - Axis Aligned.i_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.16 / »GUID« 015482FC-A4BD-4E1C-AE49-A30E5728D73A */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Common ===================================================================================================================================================================== */

/* ---- FCN_VO(tgGM_BA_Is_Empty) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgGM_BA_Is_Empty)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA0 )
{
    return (
        (
            psBA0->m_vMin.x >= psBA0->m_vMax.x ||
            psBA0->m_vMin.y >= psBA0->m_vMax.y ||
            psBA0->m_vMin.z >= psBA0->m_vMax.z
            )
    );
}


/* ---- FCN_VO(tgGM_BA_Union_PT) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Union_PT)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VEC_T(1,CPCU) NONULL pvS0 )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Point_Valid)( pvS0 ));

    psBA0->m_vMin.x = FCN_F(tgPM_FSEL)( psBA0->m_vMin.x - pvS0->x, pvS0->x, psBA0->m_vMin.x );
    psBA0->m_vMin.y = FCN_F(tgPM_FSEL)( psBA0->m_vMin.y - pvS0->y, pvS0->y, psBA0->m_vMin.y );
    psBA0->m_vMin.z = FCN_F(tgPM_FSEL)( psBA0->m_vMin.z - pvS0->z, pvS0->z, psBA0->m_vMin.z );

    psBA0->m_vMax.x = FCN_F(tgPM_FSEL)( pvS0->x - psBA0->m_vMax.x, pvS0->x, psBA0->m_vMax.x );
    psBA0->m_vMax.y = FCN_F(tgPM_FSEL)( pvS0->y - psBA0->m_vMax.y, pvS0->y, psBA0->m_vMax.y );
    psBA0->m_vMax.z = FCN_F(tgPM_FSEL)( pvS0->z - psBA0->m_vMax.z, pvS0->z, psBA0->m_vMax.z );
}


/* ---- FCN_VO(tgGM_BA_Union_SP) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Union_SP)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VEC_T(1,CPCU) NONULL pvS0, VAR_T(C) fRadius )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Point_Valid)( pvS0 ) && !FCN_F(tgPM_NAN)(fRadius));

    psBA0->m_vMin.x = FCN_F(tgPM_FSEL)( psBA0->m_vMin.x - pvS0->x + fRadius, pvS0->x - fRadius, psBA0->m_vMin.x );
    psBA0->m_vMin.y = FCN_F(tgPM_FSEL)( psBA0->m_vMin.y - pvS0->y + fRadius, pvS0->y - fRadius, psBA0->m_vMin.y );
    psBA0->m_vMin.z = FCN_F(tgPM_FSEL)( psBA0->m_vMin.z - pvS0->z + fRadius, pvS0->z - fRadius, psBA0->m_vMin.z );

    psBA0->m_vMax.x = FCN_F(tgPM_FSEL)( pvS0->x + fRadius - psBA0->m_vMax.x, pvS0->x + fRadius, psBA0->m_vMax.x );
    psBA0->m_vMax.y = FCN_F(tgPM_FSEL)( pvS0->y + fRadius - psBA0->m_vMax.y, pvS0->y + fRadius, psBA0->m_vMax.y );
    psBA0->m_vMax.z = FCN_F(tgPM_FSEL)( pvS0->z + fRadius - psBA0->m_vMax.z, pvS0->z + fRadius, psBA0->m_vMax.z );
}


/* ---- FCN_VO(tgGM_BA_Union_BA) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Union_BA)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA1 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_BA_Is_Valid)(psBA1));

    psBA0->m_vMin.x = FCN_F(tgPM_FSEL)( psBA0->m_vMin.x - psBA1->m_vMin.x, psBA1->m_vMin.x, psBA0->m_vMin.x );
    psBA0->m_vMin.y = FCN_F(tgPM_FSEL)( psBA0->m_vMin.y - psBA1->m_vMin.y, psBA1->m_vMin.y, psBA0->m_vMin.y );
    psBA0->m_vMin.z = FCN_F(tgPM_FSEL)( psBA0->m_vMin.z - psBA1->m_vMin.z, psBA1->m_vMin.z, psBA0->m_vMin.z );

    psBA0->m_vMax.x = FCN_F(tgPM_FSEL)( psBA1->m_vMax.x - psBA0->m_vMax.x, psBA1->m_vMax.x, psBA0->m_vMax.x );
    psBA0->m_vMax.y = FCN_F(tgPM_FSEL)( psBA1->m_vMax.y - psBA0->m_vMax.y, psBA1->m_vMax.y, psBA0->m_vMax.y );
    psBA0->m_vMax.z = FCN_F(tgPM_FSEL)( psBA1->m_vMax.z - psBA0->m_vMax.z, psBA1->m_vMax.z, psBA0->m_vMax.z );
}


/* ---- FCN_VO(tgGM_BA_Sweep) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Sweep)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VEC_T(1,CPCU) NONULL pvDT )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Vector_Valid)(pvDT));

    psBA0->m_vMin.x = FCN_F(tgPM_FSEL)( pvDT->x, psBA0->m_vMin.x, psBA0->m_vMin.x + pvDT->x );
    psBA0->m_vMin.y = FCN_F(tgPM_FSEL)( pvDT->y, psBA0->m_vMin.y, psBA0->m_vMin.y + pvDT->y );
    psBA0->m_vMin.z = FCN_F(tgPM_FSEL)( pvDT->z, psBA0->m_vMin.z, psBA0->m_vMin.z + pvDT->z );

    psBA0->m_vMax.x = FCN_F(tgPM_FSEL)( pvDT->x, psBA0->m_vMax.x + pvDT->x, psBA0->m_vMax.x );
    psBA0->m_vMax.y = FCN_F(tgPM_FSEL)( pvDT->y, psBA0->m_vMax.y + pvDT->y, psBA0->m_vMax.y );
    psBA0->m_vMax.z = FCN_F(tgPM_FSEL)( pvDT->z, psBA0->m_vMax.z + pvDT->z, psBA0->m_vMax.z );
}


/* ---- FCN_VO(tgGM_BA_Expand) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Expand)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VAR_T(C) fExpand )
{
    VEC_T(1)                            vExpand;

    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)(fExpand) && fExpand > TYPE_K(0));

    vExpand = FCN_V(tgMH_SET1)( fExpand );

    psBA0->m_vMin = FCN_V(tgMH_SUB)( &(psBA0->m_vMin), &vExpand );
    psBA0->m_vMax = FCN_V(tgMH_ADD)( &(psBA0->m_vMax), &vExpand );
}


/* ---- FCN_VO(tgGM_BA_Scale) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Scale)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VAR_T(C) fScale )
{
    VEC_T(1)                            vScale, vOrigin, vExtent;

    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)(fScale) && fScale > TYPE_K(0));

    vScale = FCN_V(tgMH_SET1)( fScale );
    vOrigin = FCN_VO(tgGM_BA_Query_Centre)( psBA0 );

    vExtent = FCN_V(tgMH_SUB)( &(psBA0->m_vMin), &vOrigin );
    vExtent = FCN_V(tgMH_MUL)( &vExtent, &vScale );
    psBA0->m_vMin = FCN_V(tgMH_ADD)( &vExtent, &vOrigin );

    vExtent = FCN_V(tgMH_SUB)( &(psBA0->m_vMax), &vOrigin );
    vExtent = FCN_V(tgMH_MUL)( &vExtent, &vScale );
    psBA0->m_vMax = FCN_V(tgMH_ADD)( &vExtent, &vOrigin );
}


/* ---- FCN_VO(tgGM_BA_Query_Centre) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_BA_Query_Centre)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA1 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_BA_Is_Valid)(psBA1));

    return (FCN_V(tgMH_SETP_S)(
        TYPE_K(0,5)*(psBA1->m_vMin.x + psBA1->m_vMax.x),
        TYPE_K(0,5)*(psBA1->m_vMin.y + psBA1->m_vMax.y),
        TYPE_K(0,5)*(psBA1->m_vMin.z + psBA1->m_vMax.z)
    ));
}


/* ---- FCN_VO(tgGM_BA_Reset) ---------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Reset)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0 )
{
    FCN_VO(tgGM_BA_Zero)( psBA0 );
}


/* ---- FCN_VO(tgGM_BA_Zero) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Zero)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0 )
{
    psBA0->m_vMin = FCN_V(tgMH_SETV_S)( VAR_K(KTgMAX), VAR_K(KTgMAX), VAR_K(KTgMAX) );
    psBA0->m_vMax = FCN_V(tgMH_SETV_S)( -VAR_K(KTgMAX), -VAR_K(KTgMAX), -VAR_K(KTgMAX) );
}


/* ---- FCN_VO(tgGM_BA_Is_Valid) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgGM_BA_Is_Valid)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA1 )
{
    if (FCN_F(tgPM_NAN)(psBA1->m_vMin.x) || FCN_F(tgPM_NAN)(psBA1->m_vMin.y) || FCN_F(tgPM_NAN)(psBA1->m_vMin.z))
    {
        return (false);
    };

    if (FCN_F(tgPM_NAN)(psBA1->m_vMax.x) || FCN_F(tgPM_NAN)(psBA1->m_vMax.y) || FCN_F(tgPM_NAN)(psBA1->m_vMax.z))
    {
        return (false);
    };

    if (psBA1->m_vMin.x >= psBA1->m_vMax.x || psBA1->m_vMin.y >= psBA1->m_vMax.y || psBA1->m_vMin.z >= psBA1->m_vMax.z)
    {
        return (false);
    };

    return (true);
}


/* ---- FCN_VO(tgGM_BA_Support_Point) -------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1) FCN_VO(tgGM_BA_Support_Point)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA1, VEC_T(1,CPCU) NONULL pvDN )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_BA_Is_Valid)(psBA1));
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Vector_Valid)(pvDN));
    TgGEOM_ASSERT_PARAM(FCN_F(tgCM_NR1)(FCN_V(tgMH_LSQ)(pvDN)));

    return (FCN_V(tgMH_SETP_S)(
        FCN_F(tgPM_FSEL)(pvDN->x, psBA1->m_vMax.x, psBA1->m_vMin.x),
        FCN_F(tgPM_FSEL)(pvDN->y, psBA1->m_vMax.y, psBA1->m_vMin.y),
        FCN_F(tgPM_FSEL)(pvDN->z, psBA1->m_vMax.z, psBA1->m_vMin.z)
    ));
}


/* ---- FCN_VO(tgGM_BA_Volume) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_BA_Volume)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA1 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_BA_Is_Valid)(psBA1));
    return ((psBA1->m_vMax.x - psBA1->m_vMin.x) * (psBA1->m_vMax.y - psBA1->m_vMin.y) * (psBA1->m_vMax.z - psBA1->m_vMin.z));
}


/* ---- FCN_VO(tgGM_BA_Area) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_BA_Area)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA1 )
{
    VAR_T(C)                fdx = psBA1->m_vMax.x - psBA1->m_vMin.x;
    VAR_T(C)                fdy = psBA1->m_vMax.y - psBA1->m_vMin.y;
    VAR_T(C)                fdz = psBA1->m_vMax.z - psBA1->m_vMin.z;

    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_BA_Is_Valid)(psBA1));

    return (TYPE_K(2,0)*fdx*fdy + TYPE_K(2,0)*fdx*fdz + TYPE_K(2,0)*fdy*fdz);
}


/* ---- FCN_VO(tgGM_BA_BA) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_BA)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA1 )
{
    FCN_VO(tgGM_BA_Copy)( psBA0, psBA1 );
}


/* ---- FCN_VO(tgGM_BA_Sweep_BA) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Sweep_BA)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA1, VEC_T(1,CPCU) NONULL pvDT )
{
    FCN_VO(tgGM_BA_Copy)( psBA0, psBA1 );
    FCN_VO(tgGM_BA_Sweep)( psBA0, pvDT );
}


/* ---- FCN_VO(tgGM_BA_Project) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Project)( VAR_T(PCU) NONULL ptyMin, VAR_T(PCU) NONULL ptyMax, VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA1, VEC_T(1,CPCU) NONULL pvAxis )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_BA_Is_Valid)(psBA1) && FCN_V(tgMH_Is_Vector_Valid)(pvAxis));

    *ptyMin = pvAxis->x*psBA1->m_vMin.x + pvAxis->y*psBA1->m_vMin.y + pvAxis->z*psBA1->m_vMin.z;
    *ptyMax = pvAxis->x*psBA1->m_vMax.x + pvAxis->y*psBA1->m_vMax.y + pvAxis->z*psBA1->m_vMax.z;
}


/* ---- FCN_VO(tgGM_BA_Is_Contained) --------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgGM_BA_Is_Contained)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA1, VEC_T(1,CPCU) NONULL pvP0 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_BA_Is_Valid)(psBA1) && FCN_V(tgMH_Is_Point_Valid)(pvP0));

    return (
        pvP0->x >= psBA1->m_vMin.x && pvP0->x <= psBA1->m_vMax.x &&
        pvP0->y >= psBA1->m_vMin.y && pvP0->y <= psBA1->m_vMax.y &&
        pvP0->z >= psBA1->m_vMin.z && pvP0->z <= psBA1->m_vMax.z
    );
}


/* ---- FCN_VO(tgGM_BA_TX) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_TX)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VEC_04_3_T(CPCU) NONULL pxM0 )
{
    VEC_04_4_T()                        tmM1;

    TgGEOM_ASSERT_PARAM(!FCN_04_3_V(tgMH_NaN)(pxM0));

    FCN_04_3_V(tgMH_TR)(&tmM1, pxM0);

    {
        VEC_T(1,C)                          v0 = FCN_V(tgMH_MUL_SV)( FCN_VO(tgGM_BA_Query_SizeX)( psBA0 ), (VEC_T(1,CPU))(tmM1.m_avRow + 0) );
        VEC_T(1,C)                          v1 = FCN_V(tgMH_MUL_SV)( FCN_VO(tgGM_BA_Query_SizeY)( psBA0 ), (VEC_T(1,CPU))(tmM1.m_avRow + 1) );
        VEC_T(1,C)                          v2 = FCN_V(tgMH_MUL_SV)( FCN_VO(tgGM_BA_Query_SizeZ)( psBA0 ), (VEC_T(1,CPU))(tmM1.m_avRow + 2) );
        VEC_T(1,C)                          v3 = FCN_V(tgMH_SUB)( &v1, &v0 );
        VEC_T(1,C)                          v4 = FCN_V(tgMH_SUB)( &v2, &v0 );
        VEC_T(1,C)                          v5 = FCN_V(tgMH_SUB)( &v2, &v1 );
        VEC_T(1,C)                          v7 = FCN_VO(tgGM_BA_Query_Centre)( psBA0 );
        VEC_T(1,C)                          v6 = FCN_V(tgMH_ADD)( &v7, (VEC_T(1,CPU))(tmM1.m_avRow + 3) );

        psBA0->m_vMin.x = v6.x + FCN_F(tgPM_FSEL)( v3.x, FCN_F(tgPM_FSEL)(v4.x, v0.x, v2.x), FCN_F(tgPM_FSEL)(v5.x, v1.x, v2.x) );
        psBA0->m_vMin.y = v6.y + FCN_F(tgPM_FSEL)( v3.y, FCN_F(tgPM_FSEL)(v4.y, v0.y, v2.y), FCN_F(tgPM_FSEL)(v5.y, v1.y, v2.y) );
        psBA0->m_vMin.z = v6.z + FCN_F(tgPM_FSEL)( v3.z, FCN_F(tgPM_FSEL)(v4.z, v0.z, v2.z), FCN_F(tgPM_FSEL)(v5.z, v1.z, v2.z) );

        psBA0->m_vMax.x = v6.x + FCN_F(tgPM_FSEL)( v3.x, FCN_F(tgPM_FSEL)(v5.x, v2.x, v1.x), FCN_F(tgPM_FSEL)(v4.x, v2.x, v0.x) );
        psBA0->m_vMax.y = v6.y + FCN_F(tgPM_FSEL)( v3.y, FCN_F(tgPM_FSEL)(v5.y, v2.y, v1.y), FCN_F(tgPM_FSEL)(v4.y, v2.y, v0.y) );
        psBA0->m_vMax.z = v6.z + FCN_F(tgPM_FSEL)( v3.z, FCN_F(tgPM_FSEL)(v5.z, v2.z, v1.z), FCN_F(tgPM_FSEL)(v4.z, v2.z, v0.z) );
    };
}


/* ---- FCN_VO(tgGM_BA_Copy_TX) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Copy_TX)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA1, VEC_04_3_T(CPCU) NONULL pxM0 )
{
    VEC_04_4_T()                        tmM1;

    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_BA_Is_Valid)(psBA1) && !FCN_04_3_V(tgMH_NaN)(pxM0));

    FCN_04_3_V(tgMH_TR)(&tmM1, pxM0);

    {
        VEC_T(1,C)                          v0 = FCN_V(tgMH_MUL_SV)(FCN_VO(tgGM_BA_Query_SizeX)( psBA1), (VEC_T(1,CPU))(tmM1.m_avRow + 0) );
        VEC_T(1,C)                          v1 = FCN_V(tgMH_MUL_SV)(FCN_VO(tgGM_BA_Query_SizeY)( psBA1), (VEC_T(1,CPU))(tmM1.m_avRow + 1) );
        VEC_T(1,C)                          v2 = FCN_V(tgMH_MUL_SV)(FCN_VO(tgGM_BA_Query_SizeZ)( psBA1), (VEC_T(1,CPU))(tmM1.m_avRow + 2) );
        VEC_T(1,C)                          v3 = FCN_V(tgMH_SUB)( &v1, &v0 );
        VEC_T(1,C)                          v4 = FCN_V(tgMH_SUB)( &v2, &v0 );
        VEC_T(1,C)                          v5 = FCN_V(tgMH_SUB)( &v2, &v1 );
        VEC_T(1,C)                          v7 = FCN_VO(tgGM_BA_Query_Centre)( psBA1 );
        VEC_T(1,C)                          v6 = FCN_V(tgMH_ADD)( &v7, (VEC_T(1,CPU))(tmM1.m_avRow + 3) );

        psBA0->m_vMin.x = v6.x + FCN_F(tgPM_FSEL)( v3.x, FCN_F(tgPM_FSEL)(v4.x, v0.x, v2.x), FCN_F(tgPM_FSEL)(v5.x, v1.x, v2.x) );
        psBA0->m_vMin.y = v6.y + FCN_F(tgPM_FSEL)( v3.y, FCN_F(tgPM_FSEL)(v4.y, v0.y, v2.y), FCN_F(tgPM_FSEL)(v5.y, v1.y, v2.y) );
        psBA0->m_vMin.z = v6.z + FCN_F(tgPM_FSEL)( v3.z, FCN_F(tgPM_FSEL)(v4.z, v0.z, v2.z), FCN_F(tgPM_FSEL)(v5.z, v1.z, v2.z) );

        psBA0->m_vMax.x = v6.x + FCN_F(tgPM_FSEL)( v3.x, FCN_F(tgPM_FSEL)(v5.x, v2.x, v1.x), FCN_F(tgPM_FSEL)(v4.x, v2.x, v0.x) );
        psBA0->m_vMax.y = v6.y + FCN_F(tgPM_FSEL)( v3.y, FCN_F(tgPM_FSEL)(v5.y, v2.y, v1.y), FCN_F(tgPM_FSEL)(v4.y, v2.y, v0.y) );
        psBA0->m_vMax.z = v6.z + FCN_F(tgPM_FSEL)( v3.z, FCN_F(tgPM_FSEL)(v5.z, v2.z, v1.z), FCN_F(tgPM_FSEL)(v4.z, v2.z, v0.z) );
    };
}


/* ---- FCN_VO(tgGM_BA_Init) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Init)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VEC_T(1,CPCU) NONULL pvMin, VEC_T(1,CPCU) NONULL pvMax )
{
    TgGEOM_ASSERT_PARAM(!FCN_V(tgMH_NaN)(pvMin) && !FCN_V(tgMH_NaN)(pvMax));

    psBA0->m_vMin = *pvMin;
    psBA0->m_vMax = *pvMax;
}


/* ---- FCN_VO(tgGM_BA_Init_PT) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Init_PT)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VEC_T(1,CPCU) NONULL pvPoint )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Point_Valid)(pvPoint));

    psBA0->m_vMin = *pvPoint;
    psBA0->m_vMax = *pvPoint;
}


/* ---- FCN_VO(tgGM_BA_Init_SP) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Init_SP)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VEC_T(1,CPCU) NONULL pvOrigin, VAR_T(C) fRadius )
{
    TgGEOM_ASSERT_PARAM(FCN_V(tgMH_Is_Point_Valid)(pvOrigin) && !FCN_F(tgPM_NAN)(fRadius));

    psBA0->m_vMin = FCN_V(tgMH_SETV_S)( pvOrigin->x - fRadius, pvOrigin->y - fRadius, pvOrigin->z - fRadius );
    psBA0->m_vMax = FCN_V(tgMH_SETV_S)( pvOrigin->x + fRadius, pvOrigin->y + fRadius, pvOrigin->z + fRadius );
}


/* ---- FCN_VO(tgGM_BA_Copy) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Copy)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA1 )
{
    TgGEOM_ASSERT_PARAM(FCN_VO(tgGM_BA_Is_Valid)(psBA1));

    psBA0->m_vMin = psBA1->m_vMin;
    psBA0->m_vMax = psBA1->m_vMax;
}


/* ---- FCN_VO(tgGM_BA_Set_Invalid) ---------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Set_Invalid)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0 )
{
    psBA0->m_vMin = FCN_V(tgMH_SET1)(  VAR_K(KTgMAX) );
    psBA0->m_vMin = FCN_V(tgMH_SETV)( &psBA0->m_vMin );
    psBA0->m_vMax = FCN_V(tgMH_SET1)( -VAR_K(KTgMAX) );
    psBA0->m_vMax = FCN_V(tgMH_SETV)( &psBA0->m_vMax );
}


/* ---- FCN_VO(tgGM_BA_Set_Min) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Set_Min)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VEC_T(1,CPCU) pvMin )
{
    TgGEOM_ASSERT_PARAM(!FCN_V(tgMH_NaN)(pvMin));
    psBA0->m_vMin = *pvMin;
}


/* ---- FCN_VO(tgGM_BA_Set_Max) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Set_Max)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VEC_T(1,CPCU) pvMax )
{
    TgGEOM_ASSERT_PARAM(!FCN_V(tgMH_NaN)(pvMax));
    psBA0->m_vMax = *pvMax;
}


/* ---- FCN_VO(tgGM_BA_Set_MinX) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Set_MinX)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VAR_T(C) fMinX )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)(fMinX));
    psBA0->m_vMin.x = fMinX;
}


/* ---- FCN_VO(tgGM_BA_Set_MinY) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Set_MinY)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VAR_T(C) fMinY )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)(fMinY));
    psBA0->m_vMin.y = fMinY;
}


/* ---- FCN_VO(tgGM_BA_Set_MinZ) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Set_MinZ)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VAR_T(C) fMinZ )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)(fMinZ));
    psBA0->m_vMin.z = fMinZ;
}


/* ---- FCN_VO(tgGM_BA_Set_MaxX) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Set_MaxX)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VAR_T(C) fMaxX )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)(fMaxX));
    psBA0->m_vMax.x = fMaxX;
}


/* ---- FCN_VO(tgGM_BA_Set_MaxY) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Set_MaxY)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VAR_T(C) fMaxY )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)(fMaxY));
    psBA0->m_vMax.y = fMaxY;
}


/* ---- FCN_VO(tgGM_BA_Set_MaxZ) ------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_Set_MaxZ)( VEC_OBJ_T(TgBOXAA,PCU) NONULL psBA0, VAR_T(C) fMaxZ )
{
    TgGEOM_ASSERT_PARAM(!FCN_F(tgPM_NAN)(fMaxZ));
    psBA0->m_vMax.z = fMaxZ;
}


/* ---- FCN_VO(tgGM_BA_Query_Min) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1,CP) FCN_VO(tgGM_BA_Query_Min)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA0 )
{
    return (&psBA0->m_vMin);
}


/* ---- FCN_VO(tgGM_BA_Query_Max) ------------------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_T(1,CP) FCN_VO(tgGM_BA_Query_Max)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA0 )
{
    return (&psBA0->m_vMax);
}


/* ---- FCN_VO(tgGM_BA_Query_MinX) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_BA_Query_MinX)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA0 )
{
    return (psBA0->m_vMin.x);
}


/* ---- FCN_VO(tgGM_BA_Query_MinY) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_BA_Query_MinY)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA0 )
{
    return (psBA0->m_vMin.y);
}


/* ---- FCN_VO(tgGM_BA_Query_MinZ) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_BA_Query_MinZ)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA0 )
{
    return (psBA0->m_vMin.z);
}


/* ---- FCN_VO(tgGM_BA_Query_MaxX) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_BA_Query_MaxX)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA0 )
{
    return (psBA0->m_vMax.x);
}


/* ---- FCN_VO(tgGM_BA_Query_MaxY) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_BA_Query_MaxY)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA0 )
{
    return (psBA0->m_vMax.y);
}


/* ---- FCN_VO(tgGM_BA_Query_MaxZ) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_BA_Query_MaxZ)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA0 )
{
    return (psBA0->m_vMax.z);
}


/* ---- FCN_VO(tgGM_BA_Query_SizeX) ---------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_BA_Query_SizeX)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA0 )
{
    return (psBA0->m_vMax.x - psBA0->m_vMin.x);
}


/* ---- FCN_VO(tgGM_BA_Query_SizeY) ---------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_BA_Query_SizeY)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA0 )
{
    return (psBA0->m_vMax.y - psBA0->m_vMin.y);
}


/* ---- FCN_VO(tgGM_BA_Query_SizeZ) ---------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VAR_T() FCN_VO(tgGM_BA_Query_SizeZ)( VEC_OBJ_T(TgBOXAA,CPCU) NONULL psBA0 )
{
    return (psBA0->m_vMax.z - psBA0->m_vMin.z);
}




#if defined(VEC_IS_NATIVE) && VEC_IS_NATIVE

/* ---- FCN_VO(tgGM_BA_N_Is_Empty) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgGM_BA_N_Is_Empty)( VEC_OBJ_T(TgBOXAA_N,CPCU) NONULL psBA0 )
{
    return (FCN_V(tgMH_CMP_TO_BOOL_N)( FCN_V(tgMH_CMP_LT_N)( psBA0->m_vMin, psBA0->m_vMax ) ) ? false : true);
}


/* ---- FCN_VO(tgGM_BA_N_Reset) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_N_Reset)( VEC_OBJ_T(TgBOXAA_N,PCU) NONULL psBA0 )
{
    psBA0->m_vMin = FCN_V(tgMH_SETV_N)( FCN_V(tgMH_SET1_N)(  VAR_K(KTgMAX) ) );
    psBA0->m_vMax = FCN_V(tgMH_SETV_N)( FCN_V(tgMH_SET1_N)( -VAR_K(KTgMAX) ) );
}


/* ---- FCN_VO(tgGM_BA_N_Is_Valid) ----------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgBOOL FCN_VO(tgGM_BA_N_Is_Valid)( VEC_OBJ_T(TgBOXAA_N,CPCU) NONULL psBA0 )
{
    return (!FCN_VO(tgGM_BA_N_Is_Empty)( psBA0 ));
}


/* ---- FCN_VO(tgGM_BA_N_Sweep) -------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_N_Sweep)( VEC_OBJ_T(TgBOXAA_N,PCU) NONULL psBA0, VEC_N_T(1,C) vDT )
{
    VEC_N_T(1,C)                        vF0 = FCN_V(tgMH_ADD_N)( psBA0->m_vMin, vDT );
    VEC_N_T(1,C)                        vF1 = FCN_V(tgMH_ADD_N)( psBA0->m_vMax, vDT );

    psBA0->m_vMin = FCN_V(tgMH_MIN_N)( psBA0->m_vMin, vF0 );
    psBA0->m_vMax = FCN_V(tgMH_MAX_N)( psBA0->m_vMax, vF1 );
}


/* ---- FCN_VO(tgGM_BA_N_Copy) --------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE TgVOID FCN_VO(tgGM_BA_N_Copy)( VEC_OBJ_T(TgBOXAA_N,PCU) NONULL psBA0, VEC_OBJ_T(TgBOXAA_N,CPCU) NONULL psBA1 )
{
    psBA0->m_vMin = psBA1->m_vMin;
    psBA0->m_vMax = psBA1->m_vMax;
}


/* ---- FCN_VO(tgGM_BA_N_Query_Min) ---------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_VO(tgGM_BA_N_Query_Min)( VEC_OBJ_T(TgBOXAA_N,CPCU) NONULL psBA0 )
{
    return (psBA0->m_vMin);
}


/* ---- FCN_VO(tgGM_BA_N_Query_Max) ---------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TgINLINE VEC_N_T(1) FCN_VO(tgGM_BA_N_Query_Max)( VEC_OBJ_T(TgBOXAA_N,CPCU) NONULL psBA0 )
{
    return (psBA0->m_vMax);
}


/*# defined(VEC_IS_NATIVE) && VEC_IS_NATIVE */
#endif
