/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/*  »Project«   Teikitu Gaming System (TgS) (∂)
    »File«      TgS Common [Unit Test] [Test] - Math API [Vector] [I].c_inc
    »Author«    Andrew Aye (mailto: andrew.aye@teikitu.com, https://www.andrew.aye.page)
    »Version«   5.16 / »GUID« 015482FC-A4BD-4E1C-AE49-A30E5728D73A */
/*  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */
/*  Copyright: © 2002-2020, Andrew Aye.  All Rights Reserved.
    This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,
    either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the
    GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. */
/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- */
/* == Common ===================================================================================================================================================================== */

/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */
/*  Test Functions                                                                                                                                                                 */
/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.- */

/* ---- FCN_V_UT(tgMH_ADD_S) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TEST_METHOD( FCN_V_UT(tgMH_ADD_S) )
{
    VEC_T(1,C)                          vX1 = FCN_V(tgMH_SET1)( (VAR_T())0 );
    VEC_T(1,C)                          vP4 = FCN_V(tgMH_SET1)( (VAR_T())4 );
    VEC_T(1,C)                          vP8 = FCN_V(tgMH_SET1)( (VAR_T())8 );
    VEC_T(1,C)                          vX0 = FCN_V(tgMH_SET1)( VAR_K(KTgMAX) );
    VEC_T(1,C)                          vX4 = FCN_V(tgMH_SET1)( VAR_K(KTgMAX) - 4 );
    VEC_T(1)                            vRet;

    vRet = FCN_V(tgMH_ADD_S)( &vP4, &vP4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP8, &vRet ) ); /* P P P */
    vRet = FCN_V(tgMH_ADD_S)( &vP4, &vX1 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP4, &vRet ) ); /* P P Z */
    vRet = FCN_V(tgMH_ADD_S)( &vX1, &vP4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP4, &vRet ) ); /* P Z P */
    vRet = FCN_V(tgMH_ADD_S)( &vP8, &vX4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vX0, &vRet ) ); /* X P N */
    vRet = FCN_V(tgMH_ADD_S)( &vX4, &vP8 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vX0, &vRet ) ); /* X N P */

    TEST_END_METHOD( KTgS_OK );
}


/* ---- FCN_V_UT(tgMH_ADD) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TEST_METHOD( FCN_V_UT(tgMH_ADD) )
{
    VEC_T(1,C)                          vX1 = FCN_V(tgMH_SET1)((VAR_T())0);
    VEC_T(1,C)                          vP4 = FCN_V(tgMH_SET1)((VAR_T())4);
    VEC_T(1,C)                          vN4 = FCN_V(tgMH_SET1)((VAR_T())-4);
    VEC_T(1,C)                          vP8 = FCN_V(tgMH_SET1)((VAR_T())8);
    VEC_T(1,C)                          vN8 = FCN_V(tgMH_SET1)((VAR_T())-8);
    VEC_T(1,C)                          vX4 = FCN_V(tgMH_SET1)(VAR_K(KTgMAX) - 4);
    VEC_T(1,C)                          vY3 = FCN_V(tgMH_SET1)(VAR_K(KTgMIN) + 3);

    VEC_T(1)                            vRet;

    vRet = FCN_V(tgMH_ADD)( &vP4, &vP4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP8, &vRet ) ); /* P P P */
    vRet = FCN_V(tgMH_ADD)( &vP4, &vX1 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP4, &vRet ) ); /* P P Z */
    vRet = FCN_V(tgMH_ADD)( &vP8, &vN4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP4, &vRet ) ); /* P P N */
    vRet = FCN_V(tgMH_ADD)( &vX1, &vP4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP4, &vRet ) ); /* P Z P */
    vRet = FCN_V(tgMH_ADD)( &vN4, &vP8 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP4, &vRet ) ); /* P N P */
    vRet = FCN_V(tgMH_ADD)( &vY3, &vN8 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vX4, &vRet ) ); /* P N N */
    vRet = FCN_V(tgMH_ADD)( &vP4, &vN4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vX1, &vRet ) ); /* Z P N */
    vRet = FCN_V(tgMH_ADD)( &vX1, &vX1 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vX1, &vRet ) ); /* Z Z Z */
    vRet = FCN_V(tgMH_ADD)( &vN4, &vP4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vX1, &vRet ) ); /* Z N P */
    vRet = FCN_V(tgMH_ADD)( &vX4, &vP8 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vY3, &vRet ) ); /* N P P */
    vRet = FCN_V(tgMH_ADD)( &vP4, &vN8 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vN4, &vRet ) ); /* N P N */
    vRet = FCN_V(tgMH_ADD)( &vX1, &vN4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vN4, &vRet ) ); /* N Z N */
    vRet = FCN_V(tgMH_ADD)( &vN8, &vP4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vN4, &vRet ) ); /* N N P */
    vRet = FCN_V(tgMH_ADD)( &vN4, &vX1 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vN4, &vRet ) ); /* N N Z */
    vRet = FCN_V(tgMH_ADD)( &vN4, &vN4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vN8, &vRet ) ); /* N N N */

    TEST_END_METHOD( KTgS_OK );
}


/* ---- FCN_V_UT(tgMH_SUB_S) ----------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TEST_METHOD( FCN_V_UT(tgMH_SUB_S) )
{
    VEC_T(1,C)                          vX1 = FCN_V(tgMH_SET1)((VAR_T())0);
    VEC_T(1,C)                          vP4 = FCN_V(tgMH_SET1)((VAR_T())4);
    VEC_T(1,C)                          vP8 = FCN_V(tgMH_SET1)((VAR_T())8);
    VEC_T(1,C)                          vY0 = FCN_V(tgMH_SET1)(VAR_K(KTgMIN));
    VEC_T(1,C)                          vY3 = FCN_V(tgMH_SET1)(VAR_K(KTgMIN) + 3);

    VEC_T(1)                            vRet;

    vRet = FCN_V(tgMH_SUB_S)( &vP8, &vP4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP4, &vRet ) ); /* P P P */
    vRet = FCN_V(tgMH_SUB_S)( &vP4, &vX1 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP4, &vRet ) ); /* P P Z */
    vRet = FCN_V(tgMH_SUB_S)( &vY0, &vP4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vY0, &vRet ) ); /* P Z P */
    vRet = FCN_V(tgMH_SUB_S)( &vY3, &vP8 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vY0, &vRet ) ); /* Z P N */

    TEST_END_METHOD( KTgS_OK );
}


/* ---- FCN_V_UT(tgMH_SUB) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TEST_METHOD( FCN_V_UT(tgMH_SUB) )
{
    VEC_T(1,C)                          vX1 = FCN_V(tgMH_SET1)((VAR_T())0);
    VEC_T(1,C)                          vP4 = FCN_V(tgMH_SET1)((VAR_T())4);
    VEC_T(1,C)                          vN4 = FCN_V(tgMH_SET1)((VAR_T())-4);
    VEC_T(1,C)                          vP8 = FCN_V(tgMH_SET1)((VAR_T())8);
    VEC_T(1,C)                          vN8 = FCN_V(tgMH_SET1)((VAR_T())-8);
    VEC_T(1,C)                          vX4 = FCN_V(tgMH_SET1)(VAR_K(KTgMAX) - 4);
    VEC_T(1,C)                          vY3 = FCN_V(tgMH_SET1)(VAR_K(KTgMIN) + 3);

    VEC_T(1)                            vRet;

    vRet = FCN_V(tgMH_SUB)( &vP8, &vP4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP4, &vRet ) ); /* P P P */
    vRet = FCN_V(tgMH_SUB)( &vP4, &vX1 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP4, &vRet ) ); /* P P Z */
    vRet = FCN_V(tgMH_SUB)( &vP4, &vN4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP8, &vRet ) ); /* P P N */
    vRet = FCN_V(tgMH_SUB)( &vX1, &vN4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP4, &vRet ) ); /* P Z N */
    vRet = FCN_V(tgMH_SUB)( &vY3, &vP8 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vX4, &vRet ) ); /* P N P */
    vRet = FCN_V(tgMH_SUB)( &vN4, &vN8 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP4, &vRet ) ); /* P N N */
    vRet = FCN_V(tgMH_SUB)( &vP4, &vP4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vX1, &vRet ) ); /* Z P P */
    vRet = FCN_V(tgMH_SUB)( &vX1, &vX1 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vX1, &vRet ) ); /* Z Z Z */
    vRet = FCN_V(tgMH_SUB)( &vN4, &vN4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vX1, &vRet ) ); /* Z N N */
    vRet = FCN_V(tgMH_SUB)( &vP4, &vP8 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vN4, &vRet ) ); /* N P P */
    vRet = FCN_V(tgMH_SUB)( &vX4, &vN8 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vY3, &vRet ) ); /* N P N */
    vRet = FCN_V(tgMH_SUB)( &vX1, &vP4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vN4, &vRet ) ); /* N Z P */
    vRet = FCN_V(tgMH_SUB)( &vN4, &vP4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vN8, &vRet ) ); /* N N P */
    vRet = FCN_V(tgMH_SUB)( &vN4, &vX1 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vN4, &vRet ) ); /* N N Z */
    vRet = FCN_V(tgMH_SUB)( &vN8, &vN4 ); Test__Expect_EQ( true, FCN_V(tgMH_CMP_EQ_BOOL)( &vN4, &vRet ) ); /* N N N */

    TEST_END_METHOD( KTgS_OK );
}


/* ---- FCN_V_UT(tgMH_AVG) ------------------------------------------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
TEST_METHOD( FCN_V_UT(tgMH_AVG) )
{
    VEC_T(1,C)                          vX1 = FCN_V(tgMH_SET1)((VAR_T())0);
    VEC_T(1,C)                          vP4 = FCN_V(tgMH_SET1)((VAR_T())4);
    VEC_T(1,C)                          vP6 = FCN_V(tgMH_SET1)((VAR_T())6);
    VEC_T(1,C)                          vP8 = FCN_V(tgMH_SET1)((VAR_T())8);
    VEC_T(1,C)                          vX0 = FCN_V(tgMH_SET1)(VAR_K(KTgMAX));
    VEC_T(1,C)                          vX4 = FCN_V(tgMH_SET1)(VAR_K(KTgMAX) - 4);
    VEC_T(1,C)                          vY0 = FCN_V(tgMH_SET1)(VAR_K(KTgMIN));
    VEC_T(1,C)                          vY3 = FCN_V(tgMH_SET1)(VAR_K(KTgMIN) + 3);

    VEC_T(1)                            vRet;

    vRet = FCN_V(tgMH_AVG)( &vX1, &vX1 ); Test__Expect_EQ(true, FCN_V(tgMH_CMP_EQ_BOOL)( &vX1, &vRet ));
    vRet = FCN_V(tgMH_AVG)( &vP8, &vX1 ); Test__Expect_EQ(true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP4, &vRet ));
    vRet = FCN_V(tgMH_AVG)( &vP8, &vP4 ); Test__Expect_EQ(true, FCN_V(tgMH_CMP_EQ_BOOL)( &vP6, &vRet ));
    vRet = FCN_V(tgMH_AVG)( &vX0, &vX0 ); Test__Expect_EQ(true, FCN_V(tgMH_CMP_EQ_BOOL)( &vX0, &vRet ));
    vRet = FCN_V(tgMH_AVG)( &vX4, &vX4 ); Test__Expect_EQ(true, FCN_V(tgMH_CMP_EQ_BOOL)( &vX4, &vRet ));
    vRet = FCN_V(tgMH_AVG)( &vY0, &vY0 ); Test__Expect_EQ(true, FCN_V(tgMH_CMP_EQ_BOOL)( &vY0, &vRet ));
    vRet = FCN_V(tgMH_AVG)( &vY3, &vY3 ); Test__Expect_EQ(true, FCN_V(tgMH_CMP_EQ_BOOL)( &vY3, &vRet ));

    TEST_END_METHOD( KTgS_OK );
}
